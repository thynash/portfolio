{"ast":null,"code":"import{clamp}from'../clamp.mjs';function steps(numSteps){let direction=arguments.length>1&&arguments[1]!==undefined?arguments[1]:\"end\";return progress=>{progress=direction===\"end\"?Math.min(progress,0.999):Math.max(progress,0.001);const expanded=progress*numSteps;const rounded=direction===\"end\"?Math.floor(expanded):Math.ceil(expanded);return clamp(0,1,rounded/numSteps);};}export{steps};","map":{"version":3,"names":["clamp","steps","numSteps","direction","arguments","length","undefined","progress","Math","min","max","expanded","rounded","floor","ceil"],"sources":["/home/antisyn/portfolio/src/components/node_modules/motion-utils/dist/es/easing/steps.mjs"],"sourcesContent":["import { clamp } from '../clamp.mjs';\n\nfunction steps(numSteps, direction = \"end\") {\n    return (progress) => {\n        progress =\n            direction === \"end\"\n                ? Math.min(progress, 0.999)\n                : Math.max(progress, 0.001);\n        const expanded = progress * numSteps;\n        const rounded = direction === \"end\" ? Math.floor(expanded) : Math.ceil(expanded);\n        return clamp(0, 1, rounded / numSteps);\n    };\n}\n\nexport { steps };\n"],"mappings":"AAAA,OAASA,KAAK,KAAQ,cAAc,CAEpC,QAAS,CAAAC,KAAKA,CAACC,QAAQ,CAAqB,IAAnB,CAAAC,SAAS,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,KAAK,CACtC,MAAQ,CAAAG,QAAQ,EAAK,CACjBA,QAAQ,CACJJ,SAAS,GAAK,KAAK,CACbK,IAAI,CAACC,GAAG,CAACF,QAAQ,CAAE,KAAK,CAAC,CACzBC,IAAI,CAACE,GAAG,CAACH,QAAQ,CAAE,KAAK,CAAC,CACnC,KAAM,CAAAI,QAAQ,CAAGJ,QAAQ,CAAGL,QAAQ,CACpC,KAAM,CAAAU,OAAO,CAAGT,SAAS,GAAK,KAAK,CAAGK,IAAI,CAACK,KAAK,CAACF,QAAQ,CAAC,CAAGH,IAAI,CAACM,IAAI,CAACH,QAAQ,CAAC,CAChF,MAAO,CAAAX,KAAK,CAAC,CAAC,CAAE,CAAC,CAAEY,OAAO,CAAGV,QAAQ,CAAC,CAC1C,CAAC,CACL,CAEA,OAASD,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}