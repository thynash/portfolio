{"ast":null,"code":"import{wrap}from'motion-utils';import{useRef,useState,useCallback}from'react';/**\n * Cycles through a series of visual properties. Can be used to toggle between or cycle through animations. It works similar to `useState` in React. It is provided an initial array of possible states, and returns an array of two arguments.\n *\n * An index value can be passed to the returned `cycle` function to cycle to a specific index.\n *\n * ```jsx\n * import * as React from \"react\"\n * import { motion, useCycle } from \"framer-motion\"\n *\n * export const MyComponent = () => {\n *   const [x, cycleX] = useCycle(0, 50, 100)\n *\n *   return (\n *     <motion.div\n *       animate={{ x: x }}\n *       onTap={() => cycleX()}\n *      />\n *    )\n * }\n * ```\n *\n * @param items - items to cycle through\n * @returns [currentState, cycleState]\n *\n * @public\n */function useCycle(){for(var _len=arguments.length,items=new Array(_len),_key=0;_key<_len;_key++){items[_key]=arguments[_key];}const index=useRef(0);const[item,setItem]=useState(items[index.current]);const runCycle=useCallback(next=>{index.current=typeof next!==\"number\"?wrap(0,items.length,index.current+1):next;setItem(items[index.current]);},// The array will change on each call, but by putting items.length at\n// the front of this array, we guarantee the dependency comparison will match up\n// eslint-disable-next-line react-hooks/exhaustive-deps\n[items.length,...items]);return[item,runCycle];}export{useCycle};","map":{"version":3,"names":["wrap","useRef","useState","useCallback","useCycle","_len","arguments","length","items","Array","_key","index","item","setItem","current","runCycle","next"],"sources":["/home/antisyn/portfolio/src/components/node_modules/framer-motion/dist/es/utils/use-cycle.mjs"],"sourcesContent":["import { wrap } from 'motion-utils';\nimport { useRef, useState, useCallback } from 'react';\n\n/**\n * Cycles through a series of visual properties. Can be used to toggle between or cycle through animations. It works similar to `useState` in React. It is provided an initial array of possible states, and returns an array of two arguments.\n *\n * An index value can be passed to the returned `cycle` function to cycle to a specific index.\n *\n * ```jsx\n * import * as React from \"react\"\n * import { motion, useCycle } from \"framer-motion\"\n *\n * export const MyComponent = () => {\n *   const [x, cycleX] = useCycle(0, 50, 100)\n *\n *   return (\n *     <motion.div\n *       animate={{ x: x }}\n *       onTap={() => cycleX()}\n *      />\n *    )\n * }\n * ```\n *\n * @param items - items to cycle through\n * @returns [currentState, cycleState]\n *\n * @public\n */\nfunction useCycle(...items) {\n    const index = useRef(0);\n    const [item, setItem] = useState(items[index.current]);\n    const runCycle = useCallback((next) => {\n        index.current =\n            typeof next !== \"number\"\n                ? wrap(0, items.length, index.current + 1)\n                : next;\n        setItem(items[index.current]);\n    }, \n    // The array will change on each call, but by putting items.length at\n    // the front of this array, we guarantee the dependency comparison will match up\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [items.length, ...items]);\n    return [item, runCycle];\n}\n\nexport { useCycle };\n"],"mappings":"AAAA,OAASA,IAAI,KAAQ,cAAc,CACnC,OAASC,MAAM,CAAEC,QAAQ,CAAEC,WAAW,KAAQ,OAAO,CAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,QAAS,CAAAC,QAAQA,CAAA,CAAW,SAAAC,IAAA,CAAAC,SAAA,CAAAC,MAAA,CAAPC,KAAK,KAAAC,KAAA,CAAAJ,IAAA,EAAAK,IAAA,GAAAA,IAAA,CAAAL,IAAA,CAAAK,IAAA,IAALF,KAAK,CAAAE,IAAA,EAAAJ,SAAA,CAAAI,IAAA,GACtB,KAAM,CAAAC,KAAK,CAAGV,MAAM,CAAC,CAAC,CAAC,CACvB,KAAM,CAACW,IAAI,CAAEC,OAAO,CAAC,CAAGX,QAAQ,CAACM,KAAK,CAACG,KAAK,CAACG,OAAO,CAAC,CAAC,CACtD,KAAM,CAAAC,QAAQ,CAAGZ,WAAW,CAAEa,IAAI,EAAK,CACnCL,KAAK,CAACG,OAAO,CACT,MAAO,CAAAE,IAAI,GAAK,QAAQ,CAClBhB,IAAI,CAAC,CAAC,CAAEQ,KAAK,CAACD,MAAM,CAAEI,KAAK,CAACG,OAAO,CAAG,CAAC,CAAC,CACxCE,IAAI,CACdH,OAAO,CAACL,KAAK,CAACG,KAAK,CAACG,OAAO,CAAC,CAAC,CACjC,CAAC,CACD;AACA;AACA;AACA,CAACN,KAAK,CAACD,MAAM,CAAE,GAAGC,KAAK,CAAC,CAAC,CACzB,MAAO,CAACI,IAAI,CAAEG,QAAQ,CAAC,CAC3B,CAEA,OAASX,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}