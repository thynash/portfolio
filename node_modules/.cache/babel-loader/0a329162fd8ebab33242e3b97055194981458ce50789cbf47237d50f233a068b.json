{"ast":null,"code":"import{MotionValue}from'../../value/index.mjs';import{px}from'../../value/types/numbers/units.mjs';import{addAttrValue}from'../attr/index.mjs';import{addStyleValue}from'../style/index.mjs';import{createSelectorEffect}from'../utils/create-dom-effect.mjs';import{createEffect}from'../utils/create-effect.mjs';import{frame}from'../../frameloop/frame.mjs';const toPx=px.transform;function addSVGPathValue(element,state,key,value){frame.render(()=>element.setAttribute(\"pathLength\",\"1\"));if(key===\"pathOffset\"){return state.set(key,value,()=>element.setAttribute(\"stroke-dashoffset\",toPx(-state.latest[key])));}else{if(!state.get(\"stroke-dasharray\")){state.set(\"stroke-dasharray\",new MotionValue(\"1 1\"),()=>{const{pathLength=1,pathSpacing}=state.latest;element.setAttribute(\"stroke-dasharray\",\"\".concat(toPx(pathLength),\" \").concat(toPx(pathSpacing!==null&&pathSpacing!==void 0?pathSpacing:1-Number(pathLength))));});}return state.set(key,value,undefined,state.get(\"stroke-dasharray\"));}}const addSVGValue=(element,state,key,value)=>{if(key.startsWith(\"path\")){return addSVGPathValue(element,state,key,value);}else if(key.startsWith(\"attr\")){return addAttrValue(element,state,convertAttrKey(key),value);}const handler=key in element.style?addStyleValue:addAttrValue;return handler(element,state,key,value);};const svgEffect=/*@__PURE__*/createSelectorEffect(/*@__PURE__*/createEffect(addSVGValue));function convertAttrKey(key){return key.replace(/^attr([A-Z])/,(_,firstChar)=>firstChar.toLowerCase());}export{svgEffect};","map":{"version":3,"names":["MotionValue","px","addAttrValue","addStyleValue","createSelectorEffect","createEffect","frame","toPx","transform","addSVGPathValue","element","state","key","value","render","setAttribute","set","latest","get","pathLength","pathSpacing","concat","Number","undefined","addSVGValue","startsWith","convertAttrKey","handler","style","svgEffect","replace","_","firstChar","toLowerCase"],"sources":["/home/antisyn/portfolio/src/components/node_modules/motion-dom/dist/es/effects/svg/index.mjs"],"sourcesContent":["import { MotionValue } from '../../value/index.mjs';\nimport { px } from '../../value/types/numbers/units.mjs';\nimport { addAttrValue } from '../attr/index.mjs';\nimport { addStyleValue } from '../style/index.mjs';\nimport { createSelectorEffect } from '../utils/create-dom-effect.mjs';\nimport { createEffect } from '../utils/create-effect.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toPx = px.transform;\nfunction addSVGPathValue(element, state, key, value) {\n    frame.render(() => element.setAttribute(\"pathLength\", \"1\"));\n    if (key === \"pathOffset\") {\n        return state.set(key, value, () => element.setAttribute(\"stroke-dashoffset\", toPx(-state.latest[key])));\n    }\n    else {\n        if (!state.get(\"stroke-dasharray\")) {\n            state.set(\"stroke-dasharray\", new MotionValue(\"1 1\"), () => {\n                const { pathLength = 1, pathSpacing } = state.latest;\n                element.setAttribute(\"stroke-dasharray\", `${toPx(pathLength)} ${toPx(pathSpacing ?? 1 - Number(pathLength))}`);\n            });\n        }\n        return state.set(key, value, undefined, state.get(\"stroke-dasharray\"));\n    }\n}\nconst addSVGValue = (element, state, key, value) => {\n    if (key.startsWith(\"path\")) {\n        return addSVGPathValue(element, state, key, value);\n    }\n    else if (key.startsWith(\"attr\")) {\n        return addAttrValue(element, state, convertAttrKey(key), value);\n    }\n    const handler = key in element.style ? addStyleValue : addAttrValue;\n    return handler(element, state, key, value);\n};\nconst svgEffect = /*@__PURE__*/ createSelectorEffect(\n/*@__PURE__*/ createEffect(addSVGValue));\nfunction convertAttrKey(key) {\n    return key.replace(/^attr([A-Z])/, (_, firstChar) => firstChar.toLowerCase());\n}\n\nexport { svgEffect };\n"],"mappings":"AAAA,OAASA,WAAW,KAAQ,uBAAuB,CACnD,OAASC,EAAE,KAAQ,qCAAqC,CACxD,OAASC,YAAY,KAAQ,mBAAmB,CAChD,OAASC,aAAa,KAAQ,oBAAoB,CAClD,OAASC,oBAAoB,KAAQ,gCAAgC,CACrE,OAASC,YAAY,KAAQ,4BAA4B,CACzD,OAASC,KAAK,KAAQ,2BAA2B,CAEjD,KAAM,CAAAC,IAAI,CAAGN,EAAE,CAACO,SAAS,CACzB,QAAS,CAAAC,eAAeA,CAACC,OAAO,CAAEC,KAAK,CAAEC,GAAG,CAAEC,KAAK,CAAE,CACjDP,KAAK,CAACQ,MAAM,CAAC,IAAMJ,OAAO,CAACK,YAAY,CAAC,YAAY,CAAE,GAAG,CAAC,CAAC,CAC3D,GAAIH,GAAG,GAAK,YAAY,CAAE,CACtB,MAAO,CAAAD,KAAK,CAACK,GAAG,CAACJ,GAAG,CAAEC,KAAK,CAAE,IAAMH,OAAO,CAACK,YAAY,CAAC,mBAAmB,CAAER,IAAI,CAAC,CAACI,KAAK,CAACM,MAAM,CAACL,GAAG,CAAC,CAAC,CAAC,CAAC,CAC3G,CAAC,IACI,CACD,GAAI,CAACD,KAAK,CAACO,GAAG,CAAC,kBAAkB,CAAC,CAAE,CAChCP,KAAK,CAACK,GAAG,CAAC,kBAAkB,CAAE,GAAI,CAAAhB,WAAW,CAAC,KAAK,CAAC,CAAE,IAAM,CACxD,KAAM,CAAEmB,UAAU,CAAG,CAAC,CAAEC,WAAY,CAAC,CAAGT,KAAK,CAACM,MAAM,CACpDP,OAAO,CAACK,YAAY,CAAC,kBAAkB,IAAAM,MAAA,CAAKd,IAAI,CAACY,UAAU,CAAC,MAAAE,MAAA,CAAId,IAAI,CAACa,WAAW,SAAXA,WAAW,UAAXA,WAAW,CAAI,CAAC,CAAGE,MAAM,CAACH,UAAU,CAAC,CAAC,CAAE,CAAC,CAClH,CAAC,CAAC,CACN,CACA,MAAO,CAAAR,KAAK,CAACK,GAAG,CAACJ,GAAG,CAAEC,KAAK,CAAEU,SAAS,CAAEZ,KAAK,CAACO,GAAG,CAAC,kBAAkB,CAAC,CAAC,CAC1E,CACJ,CACA,KAAM,CAAAM,WAAW,CAAGA,CAACd,OAAO,CAAEC,KAAK,CAAEC,GAAG,CAAEC,KAAK,GAAK,CAChD,GAAID,GAAG,CAACa,UAAU,CAAC,MAAM,CAAC,CAAE,CACxB,MAAO,CAAAhB,eAAe,CAACC,OAAO,CAAEC,KAAK,CAAEC,GAAG,CAAEC,KAAK,CAAC,CACtD,CAAC,IACI,IAAID,GAAG,CAACa,UAAU,CAAC,MAAM,CAAC,CAAE,CAC7B,MAAO,CAAAvB,YAAY,CAACQ,OAAO,CAAEC,KAAK,CAAEe,cAAc,CAACd,GAAG,CAAC,CAAEC,KAAK,CAAC,CACnE,CACA,KAAM,CAAAc,OAAO,CAAGf,GAAG,GAAI,CAAAF,OAAO,CAACkB,KAAK,CAAGzB,aAAa,CAAGD,YAAY,CACnE,MAAO,CAAAyB,OAAO,CAACjB,OAAO,CAAEC,KAAK,CAAEC,GAAG,CAAEC,KAAK,CAAC,CAC9C,CAAC,CACD,KAAM,CAAAgB,SAAS,CAAG,aAAczB,oBAAoB,CACpD,aAAcC,YAAY,CAACmB,WAAW,CAAC,CAAC,CACxC,QAAS,CAAAE,cAAcA,CAACd,GAAG,CAAE,CACzB,MAAO,CAAAA,GAAG,CAACkB,OAAO,CAAC,cAAc,CAAE,CAACC,CAAC,CAAEC,SAAS,GAAKA,SAAS,CAACC,WAAW,CAAC,CAAC,CAAC,CACjF,CAEA,OAASJ,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}