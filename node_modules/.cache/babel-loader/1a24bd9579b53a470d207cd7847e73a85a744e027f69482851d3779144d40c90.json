{"ast":null,"code":"import{createProjectionNode}from'./create-projection-node.mjs';import{DocumentProjectionNode}from'./DocumentProjectionNode.mjs';const rootProjectionNode={current:undefined};const HTMLProjectionNode=createProjectionNode({measureScroll:instance=>({x:instance.scrollLeft,y:instance.scrollTop}),defaultParent:()=>{if(!rootProjectionNode.current){const documentNode=new DocumentProjectionNode({});documentNode.mount(window);documentNode.setOptions({layoutScroll:true});rootProjectionNode.current=documentNode;}return rootProjectionNode.current;},resetTransform:(instance,value)=>{instance.style.transform=value!==undefined?value:\"none\";},checkIsScrollRoot:instance=>Boolean(window.getComputedStyle(instance).position===\"fixed\")});export{HTMLProjectionNode,rootProjectionNode};","map":{"version":3,"names":["createProjectionNode","DocumentProjectionNode","rootProjectionNode","current","undefined","HTMLProjectionNode","measureScroll","instance","x","scrollLeft","y","scrollTop","defaultParent","documentNode","mount","window","setOptions","layoutScroll","resetTransform","value","style","transform","checkIsScrollRoot","Boolean","getComputedStyle","position"],"sources":["/home/antisyn/portfolio/src/components/node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs"],"sourcesContent":["import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n"],"mappings":"AAAA,OAASA,oBAAoB,KAAQ,8BAA8B,CACnE,OAASC,sBAAsB,KAAQ,8BAA8B,CAErE,KAAM,CAAAC,kBAAkB,CAAG,CACvBC,OAAO,CAAEC,SACb,CAAC,CACD,KAAM,CAAAC,kBAAkB,CAAGL,oBAAoB,CAAC,CAC5CM,aAAa,CAAGC,QAAQ,GAAM,CAC1BC,CAAC,CAAED,QAAQ,CAACE,UAAU,CACtBC,CAAC,CAAEH,QAAQ,CAACI,SAChB,CAAC,CAAC,CACFC,aAAa,CAAEA,CAAA,GAAM,CACjB,GAAI,CAACV,kBAAkB,CAACC,OAAO,CAAE,CAC7B,KAAM,CAAAU,YAAY,CAAG,GAAI,CAAAZ,sBAAsB,CAAC,CAAC,CAAC,CAAC,CACnDY,YAAY,CAACC,KAAK,CAACC,MAAM,CAAC,CAC1BF,YAAY,CAACG,UAAU,CAAC,CAAEC,YAAY,CAAE,IAAK,CAAC,CAAC,CAC/Cf,kBAAkB,CAACC,OAAO,CAAGU,YAAY,CAC7C,CACA,MAAO,CAAAX,kBAAkB,CAACC,OAAO,CACrC,CAAC,CACDe,cAAc,CAAEA,CAACX,QAAQ,CAAEY,KAAK,GAAK,CACjCZ,QAAQ,CAACa,KAAK,CAACC,SAAS,CAAGF,KAAK,GAAKf,SAAS,CAAGe,KAAK,CAAG,MAAM,CACnE,CAAC,CACDG,iBAAiB,CAAGf,QAAQ,EAAKgB,OAAO,CAACR,MAAM,CAACS,gBAAgB,CAACjB,QAAQ,CAAC,CAACkB,QAAQ,GAAK,OAAO,CACnG,CAAC,CAAC,CAEF,OAASpB,kBAAkB,CAAEH,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}