{"ast":null,"code":"import{invariant}from'../../errors.mjs';import{noop}from'../../noop.mjs';import{anticipate}from'../anticipate.mjs';import{backIn,backInOut,backOut}from'../back.mjs';import{circIn,circInOut,circOut}from'../circ.mjs';import{cubicBezier}from'../cubic-bezier.mjs';import{easeIn,easeInOut,easeOut}from'../ease.mjs';import{isBezierDefinition}from'./is-bezier-definition.mjs';const easingLookup={linear:noop,easeIn,easeInOut,easeOut,circIn,circInOut,circOut,backIn,backInOut,backOut,anticipate};const isValidEasing=easing=>{return typeof easing===\"string\";};const easingDefinitionToFunction=definition=>{if(isBezierDefinition(definition)){// If cubic bezier definition, create bezier curve\ninvariant(definition.length===4,\"Cubic bezier arrays must contain four numerical values.\");const[x1,y1,x2,y2]=definition;return cubicBezier(x1,y1,x2,y2);}else if(isValidEasing(definition)){// Else lookup from table\ninvariant(easingLookup[definition]!==undefined,\"Invalid easing type '\".concat(definition,\"'\"));return easingLookup[definition];}return definition;};export{easingDefinitionToFunction};","map":{"version":3,"names":["invariant","noop","anticipate","backIn","backInOut","backOut","circIn","circInOut","circOut","cubicBezier","easeIn","easeInOut","easeOut","isBezierDefinition","easingLookup","linear","isValidEasing","easing","easingDefinitionToFunction","definition","length","x1","y1","x2","y2","undefined","concat"],"sources":["/home/antisyn/portfolio/src/components/node_modules/motion-utils/dist/es/easing/utils/map.mjs"],"sourcesContent":["import { invariant } from '../../errors.mjs';\nimport { noop } from '../../noop.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst isValidEasing = (easing) => {\n    return typeof easing === \"string\";\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (isValidEasing(definition)) {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n"],"mappings":"AAAA,OAASA,SAAS,KAAQ,kBAAkB,CAC5C,OAASC,IAAI,KAAQ,gBAAgB,CACrC,OAASC,UAAU,KAAQ,mBAAmB,CAC9C,OAASC,MAAM,CAAEC,SAAS,CAAEC,OAAO,KAAQ,aAAa,CACxD,OAASC,MAAM,CAAEC,SAAS,CAAEC,OAAO,KAAQ,aAAa,CACxD,OAASC,WAAW,KAAQ,qBAAqB,CACjD,OAASC,MAAM,CAAEC,SAAS,CAAEC,OAAO,KAAQ,aAAa,CACxD,OAASC,kBAAkB,KAAQ,4BAA4B,CAE/D,KAAM,CAAAC,YAAY,CAAG,CACjBC,MAAM,CAAEd,IAAI,CACZS,MAAM,CACNC,SAAS,CACTC,OAAO,CACPN,MAAM,CACNC,SAAS,CACTC,OAAO,CACPL,MAAM,CACNC,SAAS,CACTC,OAAO,CACPH,UACJ,CAAC,CACD,KAAM,CAAAc,aAAa,CAAIC,MAAM,EAAK,CAC9B,MAAO,OAAO,CAAAA,MAAM,GAAK,QAAQ,CACrC,CAAC,CACD,KAAM,CAAAC,0BAA0B,CAAIC,UAAU,EAAK,CAC/C,GAAIN,kBAAkB,CAACM,UAAU,CAAC,CAAE,CAChC;AACAnB,SAAS,CAACmB,UAAU,CAACC,MAAM,GAAK,CAAC,0DAA2D,CAAC,CAC7F,KAAM,CAACC,EAAE,CAAEC,EAAE,CAAEC,EAAE,CAAEC,EAAE,CAAC,CAAGL,UAAU,CACnC,MAAO,CAAAV,WAAW,CAACY,EAAE,CAAEC,EAAE,CAAEC,EAAE,CAAEC,EAAE,CAAC,CACtC,CAAC,IACI,IAAIR,aAAa,CAACG,UAAU,CAAC,CAAE,CAChC;AACAnB,SAAS,CAACc,YAAY,CAACK,UAAU,CAAC,GAAKM,SAAS,yBAAAC,MAAA,CAA0BP,UAAU,KAAG,CAAC,CACxF,MAAO,CAAAL,YAAY,CAACK,UAAU,CAAC,CACnC,CACA,MAAO,CAAAA,UAAU,CACrB,CAAC,CAED,OAASD,0BAA0B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}