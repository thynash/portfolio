{"ast":null,"code":"import{isMotionValue,motionValue}from'motion-dom';function updateMotionValuesFromProps(element,next,prev){for(const key in next){const nextValue=next[key];const prevValue=prev[key];if(isMotionValue(nextValue)){/**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */element.addValue(key,nextValue);}else if(isMotionValue(prevValue)){/**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */element.addValue(key,motionValue(nextValue,{owner:element}));}else if(prevValue!==nextValue){/**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */if(element.hasValue(key)){const existingValue=element.getValue(key);if(existingValue.liveStyle===true){existingValue.jump(nextValue);}else if(!existingValue.hasAnimated){existingValue.set(nextValue);}}else{const latestValue=element.getStaticValue(key);element.addValue(key,motionValue(latestValue!==undefined?latestValue:nextValue,{owner:element}));}}}// Handle removed values\nfor(const key in prev){if(next[key]===undefined)element.removeValue(key);}return next;}export{updateMotionValuesFromProps};","map":{"version":3,"names":["isMotionValue","motionValue","updateMotionValuesFromProps","element","next","prev","key","nextValue","prevValue","addValue","owner","hasValue","existingValue","getValue","liveStyle","jump","hasAnimated","set","latestValue","getStaticValue","undefined","removeValue"],"sources":["/home/antisyn/portfolio/src/components/node_modules/framer-motion/dist/es/render/utils/motion-values.mjs"],"sourcesContent":["import { isMotionValue, motionValue } from 'motion-dom';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n"],"mappings":"AAAA,OAASA,aAAa,CAAEC,WAAW,KAAQ,YAAY,CAEvD,QAAS,CAAAC,2BAA2BA,CAACC,OAAO,CAAEC,IAAI,CAAEC,IAAI,CAAE,CACtD,IAAK,KAAM,CAAAC,GAAG,GAAI,CAAAF,IAAI,CAAE,CACpB,KAAM,CAAAG,SAAS,CAAGH,IAAI,CAACE,GAAG,CAAC,CAC3B,KAAM,CAAAE,SAAS,CAAGH,IAAI,CAACC,GAAG,CAAC,CAC3B,GAAIN,aAAa,CAACO,SAAS,CAAC,CAAE,CAC1B;AACZ;AACA;AACA,eACYJ,OAAO,CAACM,QAAQ,CAACH,GAAG,CAAEC,SAAS,CAAC,CACpC,CAAC,IACI,IAAIP,aAAa,CAACQ,SAAS,CAAC,CAAE,CAC/B;AACZ;AACA;AACA,eACYL,OAAO,CAACM,QAAQ,CAACH,GAAG,CAAEL,WAAW,CAACM,SAAS,CAAE,CAAEG,KAAK,CAAEP,OAAQ,CAAC,CAAC,CAAC,CACrE,CAAC,IACI,IAAIK,SAAS,GAAKD,SAAS,CAAE,CAC9B;AACZ;AACA;AACA;AACA,eACY,GAAIJ,OAAO,CAACQ,QAAQ,CAACL,GAAG,CAAC,CAAE,CACvB,KAAM,CAAAM,aAAa,CAAGT,OAAO,CAACU,QAAQ,CAACP,GAAG,CAAC,CAC3C,GAAIM,aAAa,CAACE,SAAS,GAAK,IAAI,CAAE,CAClCF,aAAa,CAACG,IAAI,CAACR,SAAS,CAAC,CACjC,CAAC,IACI,IAAI,CAACK,aAAa,CAACI,WAAW,CAAE,CACjCJ,aAAa,CAACK,GAAG,CAACV,SAAS,CAAC,CAChC,CACJ,CAAC,IACI,CACD,KAAM,CAAAW,WAAW,CAAGf,OAAO,CAACgB,cAAc,CAACb,GAAG,CAAC,CAC/CH,OAAO,CAACM,QAAQ,CAACH,GAAG,CAAEL,WAAW,CAACiB,WAAW,GAAKE,SAAS,CAAGF,WAAW,CAAGX,SAAS,CAAE,CAAEG,KAAK,CAAEP,OAAQ,CAAC,CAAC,CAAC,CAC/G,CACJ,CACJ,CACA;AACA,IAAK,KAAM,CAAAG,GAAG,GAAI,CAAAD,IAAI,CAAE,CACpB,GAAID,IAAI,CAACE,GAAG,CAAC,GAAKc,SAAS,CACvBjB,OAAO,CAACkB,WAAW,CAACf,GAAG,CAAC,CAChC,CACA,MAAO,CAAAF,IAAI,CACf,CAEA,OAASF,2BAA2B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}