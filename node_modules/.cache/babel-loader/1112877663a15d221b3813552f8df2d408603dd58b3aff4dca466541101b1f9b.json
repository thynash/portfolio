{"ast":null,"code":"/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */const combineFunctions=(a,b)=>v=>b(a(v));const pipe=function(){for(var _len=arguments.length,transformers=new Array(_len),_key=0;_key<_len;_key++){transformers[_key]=arguments[_key];}return transformers.reduce(combineFunctions);};export{pipe};","map":{"version":3,"names":["combineFunctions","a","b","v","pipe","_len","arguments","length","transformers","Array","_key","reduce"],"sources":["/home/antisyn/portfolio/src/components/node_modules/motion-utils/dist/es/pipe.mjs"],"sourcesContent":["/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,KAAM,CAAAA,gBAAgB,CAAGA,CAACC,CAAC,CAAEC,CAAC,GAAMC,CAAC,EAAKD,CAAC,CAACD,CAAC,CAACE,CAAC,CAAC,CAAC,CACjD,KAAM,CAAAC,IAAI,CAAG,QAAAA,CAAA,UAAAC,IAAA,CAAAC,SAAA,CAAAC,MAAA,CAAIC,YAAY,KAAAC,KAAA,CAAAJ,IAAA,EAAAK,IAAA,GAAAA,IAAA,CAAAL,IAAA,CAAAK,IAAA,IAAZF,YAAY,CAAAE,IAAA,EAAAJ,SAAA,CAAAI,IAAA,SAAK,CAAAF,YAAY,CAACG,MAAM,CAACX,gBAAgB,CAAC,GAEvE,OAASI,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}