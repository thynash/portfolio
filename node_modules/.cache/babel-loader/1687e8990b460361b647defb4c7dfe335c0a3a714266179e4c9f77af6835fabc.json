{"ast":null,"code":"import{time}from'../../frameloop/sync-time.mjs';import{frame,cancelFrame,frameData}from'../../frameloop/frame.mjs';const frameloopDriver=update=>{const passTimestamp=_ref=>{let{timestamp}=_ref;return update(timestamp);};return{start:function(){let keepAlive=arguments.length>0&&arguments[0]!==undefined?arguments[0]:true;return frame.update(passTimestamp,keepAlive);},stop:()=>cancelFrame(passTimestamp),/**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */now:()=>frameData.isProcessing?frameData.timestamp:time.now()};};export{frameloopDriver};","map":{"version":3,"names":["time","frame","cancelFrame","frameData","frameloopDriver","update","passTimestamp","_ref","timestamp","start","keepAlive","arguments","length","undefined","stop","now","isProcessing"],"sources":["/home/antisyn/portfolio/src/components/node_modules/motion-dom/dist/es/animation/drivers/frame.mjs"],"sourcesContent":["import { time } from '../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: (keepAlive = true) => frame.update(passTimestamp, keepAlive),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n"],"mappings":"AAAA,OAASA,IAAI,KAAQ,+BAA+B,CACpD,OAASC,KAAK,CAAEC,WAAW,CAAEC,SAAS,KAAQ,2BAA2B,CAEzE,KAAM,CAAAC,eAAe,CAAIC,MAAM,EAAK,CAChC,KAAM,CAAAC,aAAa,CAAGC,IAAA,MAAC,CAAEC,SAAU,CAAC,CAAAD,IAAA,OAAK,CAAAF,MAAM,CAACG,SAAS,CAAC,GAC1D,MAAO,CACHC,KAAK,CAAE,QAAAA,CAAA,KAAC,CAAAC,SAAS,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,IAAI,OAAK,CAAAV,KAAK,CAACI,MAAM,CAACC,aAAa,CAAEI,SAAS,CAAC,GACnEI,IAAI,CAAEA,CAAA,GAAMZ,WAAW,CAACI,aAAa,CAAC,CACtC;AACR;AACA;AACA,WACQS,GAAG,CAAEA,CAAA,GAAOZ,SAAS,CAACa,YAAY,CAAGb,SAAS,CAACK,SAAS,CAAGR,IAAI,CAACe,GAAG,CAAC,CACxE,CAAC,CACL,CAAC,CAED,OAASX,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}