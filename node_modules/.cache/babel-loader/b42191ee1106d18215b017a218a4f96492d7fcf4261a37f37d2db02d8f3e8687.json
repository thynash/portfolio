{"ast":null,"code":"import{isValidMotionProp}from'../../../motion/utils/valid-prop.mjs';let shouldForward=key=>!isValidMotionProp(key);function loadExternalIsValidProp(isValidProp){if(typeof isValidProp!==\"function\")return;// Explicitly filter our events\nshouldForward=key=>key.startsWith(\"on\")?!isValidMotionProp(key):isValidProp(key);}/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */try{/**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);}catch(_unused){// We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}function filterProps(props,isDom,forwardMotionProps){const filteredProps={};for(const key in props){/**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */if(key===\"values\"&&typeof props.values===\"object\")continue;if(shouldForward(key)||forwardMotionProps===true&&isValidMotionProp(key)||!isDom&&!isValidMotionProp(key)||// If trying to use native HTML drag events, forward drag listeners\nprops[\"draggable\"]&&key.startsWith(\"onDrag\")){filteredProps[key]=props[key];}}return filteredProps;}export{filterProps,loadExternalIsValidProp};","map":{"version":3,"names":["isValidMotionProp","shouldForward","key","loadExternalIsValidProp","isValidProp","startsWith","require","default","_unused","filterProps","props","isDom","forwardMotionProps","filteredProps","values"],"sources":["/home/antisyn/portfolio/src/components/node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs"],"sourcesContent":["import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (typeof isValidProp !== \"function\")\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n"],"mappings":"AAAA,OAASA,iBAAiB,KAAQ,sCAAsC,CAExE,GAAI,CAAAC,aAAa,CAAIC,GAAG,EAAK,CAACF,iBAAiB,CAACE,GAAG,CAAC,CACpD,QAAS,CAAAC,uBAAuBA,CAACC,WAAW,CAAE,CAC1C,GAAI,MAAO,CAAAA,WAAW,GAAK,UAAU,CACjC,OACJ;AACAH,aAAa,CAAIC,GAAG,EAAKA,GAAG,CAACG,UAAU,CAAC,IAAI,CAAC,CAAG,CAACL,iBAAiB,CAACE,GAAG,CAAC,CAAGE,WAAW,CAACF,GAAG,CAAC,CAC9F,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,GAAI,CACA;AACJ;AACA;AACA;AACA,OACIC,uBAAuB,CAACG,OAAO,CAAC,wBAAwB,CAAC,CAACC,OAAO,CAAC,CACtE,CACA,MAAAC,OAAA,CAAM,CACF;AAAA,CAEJ,QAAS,CAAAC,WAAWA,CAACC,KAAK,CAAEC,KAAK,CAAEC,kBAAkB,CAAE,CACnD,KAAM,CAAAC,aAAa,CAAG,CAAC,CAAC,CACxB,IAAK,KAAM,CAAAX,GAAG,GAAI,CAAAQ,KAAK,CAAE,CACrB;AACR;AACA;AACA;AACA;AACA;AACA,WACQ,GAAIR,GAAG,GAAK,QAAQ,EAAI,MAAO,CAAAQ,KAAK,CAACI,MAAM,GAAK,QAAQ,CACpD,SACJ,GAAIb,aAAa,CAACC,GAAG,CAAC,EACjBU,kBAAkB,GAAK,IAAI,EAAIZ,iBAAiB,CAACE,GAAG,CAAE,EACtD,CAACS,KAAK,EAAI,CAACX,iBAAiB,CAACE,GAAG,CAAE,EACnC;AACCQ,KAAK,CAAC,WAAW,CAAC,EACfR,GAAG,CAACG,UAAU,CAAC,QAAQ,CAAE,CAAE,CAC/BQ,aAAa,CAACX,GAAG,CAAC,CACdQ,KAAK,CAACR,GAAG,CAAC,CAClB,CACJ,CACA,MAAO,CAAAW,aAAa,CACxB,CAEA,OAASJ,WAAW,CAAEN,uBAAuB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}