{"ast":null,"code":"import _objectWithoutProperties from\"/home/antisyn/portfolio/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";const _excluded=[\"attrX\",\"attrY\",\"attrScale\",\"pathLength\",\"pathSpacing\",\"pathOffset\"];import{buildHTMLStyles}from'../../html/utils/build-styles.mjs';import{buildSVGPath}from'./path.mjs';/**\n * Build SVG visual attrbutes, like cx and style.transform\n */function buildSVGAttrs(state,_ref,isSVGTag,transformTemplate,styleProp){let{attrX,attrY,attrScale,pathLength,pathSpacing=1,pathOffset=0// This is object creation, which we try to avoid per-frame.\n}=_ref,latest=_objectWithoutProperties(_ref,_excluded);buildHTMLStyles(state,latest,transformTemplate);/**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */if(isSVGTag){if(state.style.viewBox){state.attrs.viewBox=state.style.viewBox;}return;}state.attrs=state.style;state.style={};const{attrs,style}=state;/**\n     * However, we apply transforms as CSS transforms.\n     * So if we detect a transform, transformOrigin we take it from attrs and copy it into style.\n     */if(attrs.transform){style.transform=attrs.transform;delete attrs.transform;}if(style.transform||attrs.transformOrigin){var _attrs$transformOrigi;style.transformOrigin=(_attrs$transformOrigi=attrs.transformOrigin)!==null&&_attrs$transformOrigi!==void 0?_attrs$transformOrigi:\"50% 50%\";delete attrs.transformOrigin;}if(style.transform){var _styleProp$transformB;/**\n         * SVG's element transform-origin uses its own median as a reference.\n         * Therefore, transformBox becomes a fill-box\n         */style.transformBox=(_styleProp$transformB=styleProp===null||styleProp===void 0?void 0:styleProp.transformBox)!==null&&_styleProp$transformB!==void 0?_styleProp$transformB:\"fill-box\";delete attrs.transformBox;}// Render attrX/attrY/attrScale as attributes\nif(attrX!==undefined)attrs.x=attrX;if(attrY!==undefined)attrs.y=attrY;if(attrScale!==undefined)attrs.scale=attrScale;// Build SVG path if one has been defined\nif(pathLength!==undefined){buildSVGPath(attrs,pathLength,pathSpacing,pathOffset,false);}}export{buildSVGAttrs};","map":{"version":3,"names":["buildHTMLStyles","buildSVGPath","buildSVGAttrs","state","_ref","isSVGTag","transformTemplate","styleProp","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","_objectWithoutProperties","_excluded","style","viewBox","attrs","transform","transformOrigin","_attrs$transformOrigi","_styleProp$transformB","transformBox","undefined","x","y","scale"],"sources":["/home/antisyn/portfolio/src/components/node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs"],"sourcesContent":["import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate, styleProp) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style } = state;\n    /**\n     * However, we apply transforms as CSS transforms.\n     * So if we detect a transform, transformOrigin we take it from attrs and copy it into style.\n     */\n    if (attrs.transform) {\n        style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    if (style.transform || attrs.transformOrigin) {\n        style.transformOrigin = attrs.transformOrigin ?? \"50% 50%\";\n        delete attrs.transformOrigin;\n    }\n    if (style.transform) {\n        /**\n         * SVG's element transform-origin uses its own median as a reference.\n         * Therefore, transformBox becomes a fill-box\n         */\n        style.transformBox = styleProp?.transformBox ?? \"fill-box\";\n        delete attrs.transformBox;\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n"],"mappings":"uNAAA,OAASA,eAAe,KAAQ,mCAAmC,CACnE,OAASC,YAAY,KAAQ,YAAY,CAEzC;AACA;AACA,GACA,QAAS,CAAAC,aAAaA,CAACC,KAAK,CAAAC,IAAA,CAEfC,QAAQ,CAAEC,iBAAiB,CAAEC,SAAS,CAAE,IAFvB,CAAEC,KAAK,CAAEC,KAAK,CAAEC,SAAS,CAAEC,UAAU,CAAEC,WAAW,CAAG,CAAC,CAAEC,UAAU,CAAG,CACnG;AACU,CAAC,CAAAT,IAAA,CAARU,MAAM,CAAAC,wBAAA,CAAAX,IAAA,CAAAY,SAAA,EACLhB,eAAe,CAACG,KAAK,CAAEW,MAAM,CAAER,iBAAiB,CAAC,CACjD;AACJ;AACA;AACA,OACI,GAAID,QAAQ,CAAE,CACV,GAAIF,KAAK,CAACc,KAAK,CAACC,OAAO,CAAE,CACrBf,KAAK,CAACgB,KAAK,CAACD,OAAO,CAAGf,KAAK,CAACc,KAAK,CAACC,OAAO,CAC7C,CACA,OACJ,CACAf,KAAK,CAACgB,KAAK,CAAGhB,KAAK,CAACc,KAAK,CACzBd,KAAK,CAACc,KAAK,CAAG,CAAC,CAAC,CAChB,KAAM,CAAEE,KAAK,CAAEF,KAAM,CAAC,CAAGd,KAAK,CAC9B;AACJ;AACA;AACA,OACI,GAAIgB,KAAK,CAACC,SAAS,CAAE,CACjBH,KAAK,CAACG,SAAS,CAAGD,KAAK,CAACC,SAAS,CACjC,MAAO,CAAAD,KAAK,CAACC,SAAS,CAC1B,CACA,GAAIH,KAAK,CAACG,SAAS,EAAID,KAAK,CAACE,eAAe,CAAE,KAAAC,qBAAA,CAC1CL,KAAK,CAACI,eAAe,EAAAC,qBAAA,CAAGH,KAAK,CAACE,eAAe,UAAAC,qBAAA,UAAAA,qBAAA,CAAI,SAAS,CAC1D,MAAO,CAAAH,KAAK,CAACE,eAAe,CAChC,CACA,GAAIJ,KAAK,CAACG,SAAS,CAAE,KAAAG,qBAAA,CACjB;AACR;AACA;AACA,WACQN,KAAK,CAACO,YAAY,EAAAD,qBAAA,CAAGhB,SAAS,SAATA,SAAS,iBAATA,SAAS,CAAEiB,YAAY,UAAAD,qBAAA,UAAAA,qBAAA,CAAI,UAAU,CAC1D,MAAO,CAAAJ,KAAK,CAACK,YAAY,CAC7B,CACA;AACA,GAAIhB,KAAK,GAAKiB,SAAS,CACnBN,KAAK,CAACO,CAAC,CAAGlB,KAAK,CACnB,GAAIC,KAAK,GAAKgB,SAAS,CACnBN,KAAK,CAACQ,CAAC,CAAGlB,KAAK,CACnB,GAAIC,SAAS,GAAKe,SAAS,CACvBN,KAAK,CAACS,KAAK,CAAGlB,SAAS,CAC3B;AACA,GAAIC,UAAU,GAAKc,SAAS,CAAE,CAC1BxB,YAAY,CAACkB,KAAK,CAAER,UAAU,CAAEC,WAAW,CAAEC,UAAU,CAAE,KAAK,CAAC,CACnE,CACJ,CAEA,OAASX,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}