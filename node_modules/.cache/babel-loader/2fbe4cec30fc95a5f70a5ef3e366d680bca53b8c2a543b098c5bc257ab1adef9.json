{"ast":null,"code":"import{px}from'motion-dom';const dashKeys={offset:\"stroke-dashoffset\",array:\"stroke-dasharray\"};const camelKeys={offset:\"strokeDashoffset\",array:\"strokeDasharray\"};/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */function buildSVGPath(attrs,length){let spacing=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1;let offset=arguments.length>3&&arguments[3]!==undefined?arguments[3]:0;let useDashCase=arguments.length>4&&arguments[4]!==undefined?arguments[4]:true;// Normalise path length by setting SVG attribute pathLength to 1\nattrs.pathLength=1;// We use dash case when setting attributes directly to the DOM node and camel case\n// when defining props on a React component.\nconst keys=useDashCase?dashKeys:camelKeys;// Build the dash offset\nattrs[keys.offset]=px.transform(-offset);// Build the dash array\nconst pathLength=px.transform(length);const pathSpacing=px.transform(spacing);attrs[keys.array]=\"\".concat(pathLength,\" \").concat(pathSpacing);}export{buildSVGPath};","map":{"version":3,"names":["px","dashKeys","offset","array","camelKeys","buildSVGPath","attrs","length","spacing","arguments","undefined","useDashCase","pathLength","keys","transform","pathSpacing","concat"],"sources":["/home/antisyn/portfolio/src/components/node_modules/framer-motion/dist/es/render/svg/utils/path.mjs"],"sourcesContent":["import { px } from 'motion-dom';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n"],"mappings":"AAAA,OAASA,EAAE,KAAQ,YAAY,CAE/B,KAAM,CAAAC,QAAQ,CAAG,CACbC,MAAM,CAAE,mBAAmB,CAC3BC,KAAK,CAAE,kBACX,CAAC,CACD,KAAM,CAAAC,SAAS,CAAG,CACdF,MAAM,CAAE,kBAAkB,CAC1BC,KAAK,CAAE,iBACX,CAAC,CACD;AACA;AACA;AACA;AACA;AACA;AACA,GACA,QAAS,CAAAE,YAAYA,CAACC,KAAK,CAAEC,MAAM,CAA+C,IAA7C,CAAAC,OAAO,CAAAC,SAAA,CAAAF,MAAA,IAAAE,SAAA,MAAAC,SAAA,CAAAD,SAAA,IAAG,CAAC,IAAE,CAAAP,MAAM,CAAAO,SAAA,CAAAF,MAAA,IAAAE,SAAA,MAAAC,SAAA,CAAAD,SAAA,IAAG,CAAC,IAAE,CAAAE,WAAW,CAAAF,SAAA,CAAAF,MAAA,IAAAE,SAAA,MAAAC,SAAA,CAAAD,SAAA,IAAG,IAAI,CAC5E;AACAH,KAAK,CAACM,UAAU,CAAG,CAAC,CACpB;AACA;AACA,KAAM,CAAAC,IAAI,CAAGF,WAAW,CAAGV,QAAQ,CAAGG,SAAS,CAC/C;AACAE,KAAK,CAACO,IAAI,CAACX,MAAM,CAAC,CAAGF,EAAE,CAACc,SAAS,CAAC,CAACZ,MAAM,CAAC,CAC1C;AACA,KAAM,CAAAU,UAAU,CAAGZ,EAAE,CAACc,SAAS,CAACP,MAAM,CAAC,CACvC,KAAM,CAAAQ,WAAW,CAAGf,EAAE,CAACc,SAAS,CAACN,OAAO,CAAC,CACzCF,KAAK,CAACO,IAAI,CAACV,KAAK,CAAC,IAAAa,MAAA,CAAMJ,UAAU,MAAAI,MAAA,CAAID,WAAW,CAAE,CACtD,CAEA,OAASV,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}