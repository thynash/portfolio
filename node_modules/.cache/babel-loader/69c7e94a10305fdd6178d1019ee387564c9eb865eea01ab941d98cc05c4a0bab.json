{"ast":null,"code":"import{collectMotionValues,motionValue}from'./index.mjs';import{subscribeValue}from'./subscribe-value.mjs';/**\n * Create a `MotionValue` that transforms the output of other `MotionValue`s by\n * passing their latest values through a transform function.\n *\n * Whenever a `MotionValue` referred to in the provided function is updated,\n * it will be re-evaluated.\n *\n * ```jsx\n * const x = motionValue(0)\n * const y = transformValue(() => x.get() * 2) // double x\n * ```\n *\n * @param transformer - A transform function. This function must be pure with no side-effects or conditional statements.\n * @returns `MotionValue`\n *\n * @public\n */function transformValue(transform){const collectedValues=[];/**\n     * Open session of collectMotionValues. Any MotionValue that calls get()\n     * inside transform will be saved into this array.\n     */collectMotionValues.current=collectedValues;const initialValue=transform();collectMotionValues.current=undefined;const value=motionValue(initialValue);subscribeValue(collectedValues,value,transform);return value;}export{transformValue};","map":{"version":3,"names":["collectMotionValues","motionValue","subscribeValue","transformValue","transform","collectedValues","current","initialValue","undefined","value"],"sources":["/home/antisyn/portfolio/src/components/node_modules/motion-dom/dist/es/value/transform-value.mjs"],"sourcesContent":["import { collectMotionValues, motionValue } from './index.mjs';\nimport { subscribeValue } from './subscribe-value.mjs';\n\n/**\n * Create a `MotionValue` that transforms the output of other `MotionValue`s by\n * passing their latest values through a transform function.\n *\n * Whenever a `MotionValue` referred to in the provided function is updated,\n * it will be re-evaluated.\n *\n * ```jsx\n * const x = motionValue(0)\n * const y = transformValue(() => x.get() * 2) // double x\n * ```\n *\n * @param transformer - A transform function. This function must be pure with no side-effects or conditional statements.\n * @returns `MotionValue`\n *\n * @public\n */\nfunction transformValue(transform) {\n    const collectedValues = [];\n    /**\n     * Open session of collectMotionValues. Any MotionValue that calls get()\n     * inside transform will be saved into this array.\n     */\n    collectMotionValues.current = collectedValues;\n    const initialValue = transform();\n    collectMotionValues.current = undefined;\n    const value = motionValue(initialValue);\n    subscribeValue(collectedValues, value, transform);\n    return value;\n}\n\nexport { transformValue };\n"],"mappings":"AAAA,OAASA,mBAAmB,CAAEC,WAAW,KAAQ,aAAa,CAC9D,OAASC,cAAc,KAAQ,uBAAuB,CAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,QAAS,CAAAC,cAAcA,CAACC,SAAS,CAAE,CAC/B,KAAM,CAAAC,eAAe,CAAG,EAAE,CAC1B;AACJ;AACA;AACA,OACIL,mBAAmB,CAACM,OAAO,CAAGD,eAAe,CAC7C,KAAM,CAAAE,YAAY,CAAGH,SAAS,CAAC,CAAC,CAChCJ,mBAAmB,CAACM,OAAO,CAAGE,SAAS,CACvC,KAAM,CAAAC,KAAK,CAAGR,WAAW,CAACM,YAAY,CAAC,CACvCL,cAAc,CAACG,eAAe,CAAEI,KAAK,CAAEL,SAAS,CAAC,CACjD,MAAO,CAAAK,KAAK,CAChB,CAEA,OAASN,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}