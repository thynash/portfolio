{"ast":null,"code":"import{isMotionValue}from'motion-dom';import{useCombineMotionValues}from'./use-combine-values.mjs';/**\n * Combine multiple motion values into a new one using a string template literal.\n *\n * ```jsx\n * import {\n *   motion,\n *   useSpring,\n *   useMotionValue,\n *   useMotionTemplate\n * } from \"framer-motion\"\n *\n * function Component() {\n *   const shadowX = useSpring(0)\n *   const shadowY = useMotionValue(0)\n *   const shadow = useMotionTemplate`drop-shadow(${shadowX}px ${shadowY}px 20px rgba(0,0,0,0.3))`\n *\n *   return <motion.div style={{ filter: shadow }} />\n * }\n * ```\n *\n * @public\n */function useMotionTemplate(fragments){for(var _len=arguments.length,values=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){values[_key-1]=arguments[_key];}/**\n     * Create a function that will build a string from the latest motion values.\n     */const numFragments=fragments.length;function buildValue(){let output=\"\";for(let i=0;i<numFragments;i++){output+=fragments[i];const value=values[i];if(value){output+=isMotionValue(value)?value.get():value;}}return output;}return useCombineMotionValues(values.filter(isMotionValue),buildValue);}export{useMotionTemplate};","map":{"version":3,"names":["isMotionValue","useCombineMotionValues","useMotionTemplate","fragments","_len","arguments","length","values","Array","_key","numFragments","buildValue","output","i","value","get","filter"],"sources":["/home/antisyn/portfolio/src/components/node_modules/framer-motion/dist/es/value/use-motion-template.mjs"],"sourcesContent":["import { isMotionValue } from 'motion-dom';\nimport { useCombineMotionValues } from './use-combine-values.mjs';\n\n/**\n * Combine multiple motion values into a new one using a string template literal.\n *\n * ```jsx\n * import {\n *   motion,\n *   useSpring,\n *   useMotionValue,\n *   useMotionTemplate\n * } from \"framer-motion\"\n *\n * function Component() {\n *   const shadowX = useSpring(0)\n *   const shadowY = useMotionValue(0)\n *   const shadow = useMotionTemplate`drop-shadow(${shadowX}px ${shadowY}px 20px rgba(0,0,0,0.3))`\n *\n *   return <motion.div style={{ filter: shadow }} />\n * }\n * ```\n *\n * @public\n */\nfunction useMotionTemplate(fragments, ...values) {\n    /**\n     * Create a function that will build a string from the latest motion values.\n     */\n    const numFragments = fragments.length;\n    function buildValue() {\n        let output = ``;\n        for (let i = 0; i < numFragments; i++) {\n            output += fragments[i];\n            const value = values[i];\n            if (value) {\n                output += isMotionValue(value) ? value.get() : value;\n            }\n        }\n        return output;\n    }\n    return useCombineMotionValues(values.filter(isMotionValue), buildValue);\n}\n\nexport { useMotionTemplate };\n"],"mappings":"AAAA,OAASA,aAAa,KAAQ,YAAY,CAC1C,OAASC,sBAAsB,KAAQ,0BAA0B,CAEjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,QAAS,CAAAC,iBAAiBA,CAACC,SAAS,CAAa,SAAAC,IAAA,CAAAC,SAAA,CAAAC,MAAA,CAARC,MAAM,KAAAC,KAAA,CAAAJ,IAAA,GAAAA,IAAA,MAAAK,IAAA,GAAAA,IAAA,CAAAL,IAAA,CAAAK,IAAA,IAANF,MAAM,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA,GAC3C;AACJ;AACA,OACI,KAAM,CAAAC,YAAY,CAAGP,SAAS,CAACG,MAAM,CACrC,QAAS,CAAAK,UAAUA,CAAA,CAAG,CAClB,GAAI,CAAAC,MAAM,GAAK,CACf,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGH,YAAY,CAAEG,CAAC,EAAE,CAAE,CACnCD,MAAM,EAAIT,SAAS,CAACU,CAAC,CAAC,CACtB,KAAM,CAAAC,KAAK,CAAGP,MAAM,CAACM,CAAC,CAAC,CACvB,GAAIC,KAAK,CAAE,CACPF,MAAM,EAAIZ,aAAa,CAACc,KAAK,CAAC,CAAGA,KAAK,CAACC,GAAG,CAAC,CAAC,CAAGD,KAAK,CACxD,CACJ,CACA,MAAO,CAAAF,MAAM,CACjB,CACA,MAAO,CAAAX,sBAAsB,CAACM,MAAM,CAACS,MAAM,CAAChB,aAAa,CAAC,CAAEW,UAAU,CAAC,CAC3E,CAEA,OAAST,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}