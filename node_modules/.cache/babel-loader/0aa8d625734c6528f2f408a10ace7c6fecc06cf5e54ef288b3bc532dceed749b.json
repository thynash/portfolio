{"ast":null,"code":"\"use client\";import _objectSpread from\"/home/antisyn/portfolio/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{jsx}from'react/jsx-runtime';import{frame,microtask}from'motion-dom';import{useContext,Component}from'react';import{usePresence}from'../../../components/AnimatePresence/use-presence.mjs';import{LayoutGroupContext}from'../../../context/LayoutGroupContext.mjs';import{SwitchLayoutGroupContext}from'../../../context/SwitchLayoutGroupContext.mjs';import{globalProjectionState}from'../../../projection/node/state.mjs';import{correctBorderRadius}from'../../../projection/styles/scale-border-radius.mjs';import{correctBoxShadow}from'../../../projection/styles/scale-box-shadow.mjs';import{addScaleCorrector}from'../../../projection/styles/scale-correction.mjs';class MeasureLayoutWithContext extends Component{/**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */componentDidMount(){const{visualElement,layoutGroup,switchLayoutGroup,layoutId}=this.props;const{projection}=visualElement;addScaleCorrector(defaultScaleCorrectors);if(projection){if(layoutGroup.group)layoutGroup.group.add(projection);if(switchLayoutGroup&&switchLayoutGroup.register&&layoutId){switchLayoutGroup.register(projection);}projection.root.didUpdate();projection.addEventListener(\"animationComplete\",()=>{this.safeToRemove();});projection.setOptions(_objectSpread(_objectSpread({},projection.options),{},{onExitComplete:()=>this.safeToRemove()}));}globalProjectionState.hasEverUpdated=true;}getSnapshotBeforeUpdate(prevProps){const{layoutDependency,visualElement,drag,isPresent}=this.props;const{projection}=visualElement;if(!projection)return null;/**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */projection.isPresent=isPresent;if(drag||prevProps.layoutDependency!==layoutDependency||layoutDependency===undefined||prevProps.isPresent!==isPresent){projection.willUpdate();}else{this.safeToRemove();}if(prevProps.isPresent!==isPresent){if(isPresent){projection.promote();}else if(!projection.relegate()){/**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */frame.postRender(()=>{const stack=projection.getStack();if(!stack||!stack.members.length){this.safeToRemove();}});}}return null;}componentDidUpdate(){const{projection}=this.props.visualElement;if(projection){projection.root.didUpdate();microtask.postRender(()=>{if(!projection.currentAnimation&&projection.isLead()){this.safeToRemove();}});}}componentWillUnmount(){const{visualElement,layoutGroup,switchLayoutGroup:promoteContext}=this.props;const{projection}=visualElement;if(projection){projection.scheduleCheckAfterUnmount();if(layoutGroup&&layoutGroup.group)layoutGroup.group.remove(projection);if(promoteContext&&promoteContext.deregister)promoteContext.deregister(projection);}}safeToRemove(){const{safeToRemove}=this.props;safeToRemove&&safeToRemove();}render(){return null;}}function MeasureLayout(props){const[isPresent,safeToRemove]=usePresence();const layoutGroup=useContext(LayoutGroupContext);return jsx(MeasureLayoutWithContext,_objectSpread(_objectSpread({},props),{},{layoutGroup:layoutGroup,switchLayoutGroup:useContext(SwitchLayoutGroupContext),isPresent:isPresent,safeToRemove:safeToRemove}));}const defaultScaleCorrectors={borderRadius:_objectSpread(_objectSpread({},correctBorderRadius),{},{applyTo:[\"borderTopLeftRadius\",\"borderTopRightRadius\",\"borderBottomLeftRadius\",\"borderBottomRightRadius\"]}),borderTopLeftRadius:correctBorderRadius,borderTopRightRadius:correctBorderRadius,borderBottomLeftRadius:correctBorderRadius,borderBottomRightRadius:correctBorderRadius,boxShadow:correctBoxShadow};export{MeasureLayout};","map":{"version":3,"names":["_objectSpread","jsx","frame","microtask","useContext","Component","usePresence","LayoutGroupContext","SwitchLayoutGroupContext","globalProjectionState","correctBorderRadius","correctBoxShadow","addScaleCorrector","MeasureLayoutWithContext","componentDidMount","visualElement","layoutGroup","switchLayoutGroup","layoutId","props","projection","defaultScaleCorrectors","group","add","register","root","didUpdate","addEventListener","safeToRemove","setOptions","options","onExitComplete","hasEverUpdated","getSnapshotBeforeUpdate","prevProps","layoutDependency","drag","isPresent","undefined","willUpdate","promote","relegate","postRender","stack","getStack","members","length","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","render","MeasureLayout","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow"],"sources":["/home/antisyn/portfolio/src/components/node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs"],"sourcesContent":["\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { frame, microtask } from 'motion-dom';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const { projection } = visualElement;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined ||\n            prevProps.isPresent !== isPresent) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}