{"ast":null,"code":"import{useConstant}from'../../utils/use-constant.mjs';import{useUnmountEffect}from'../../utils/use-unmount-effect.mjs';import{createScopedWaapiAnimate}from'../animators/waapi/animate-style.mjs';function useAnimateMini(){const scope=useConstant(()=>({current:null,// Will be hydrated by React\nanimations:[]}));const animate=useConstant(()=>createScopedWaapiAnimate(scope));useUnmountEffect(()=>{scope.animations.forEach(animation=>animation.stop());});return[scope,animate];}export{useAnimateMini};","map":{"version":3,"names":["useConstant","useUnmountEffect","createScopedWaapiAnimate","useAnimateMini","scope","current","animations","animate","forEach","animation","stop"],"sources":["/home/antisyn/portfolio/src/components/node_modules/framer-motion/dist/es/animation/hooks/use-animate-style.mjs"],"sourcesContent":["import { useConstant } from '../../utils/use-constant.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { createScopedWaapiAnimate } from '../animators/waapi/animate-style.mjs';\n\nfunction useAnimateMini() {\n    const scope = useConstant(() => ({\n        current: null, // Will be hydrated by React\n        animations: [],\n    }));\n    const animate = useConstant(() => createScopedWaapiAnimate(scope));\n    useUnmountEffect(() => {\n        scope.animations.forEach((animation) => animation.stop());\n    });\n    return [scope, animate];\n}\n\nexport { useAnimateMini };\n"],"mappings":"AAAA,OAASA,WAAW,KAAQ,8BAA8B,CAC1D,OAASC,gBAAgB,KAAQ,oCAAoC,CACrE,OAASC,wBAAwB,KAAQ,sCAAsC,CAE/E,QAAS,CAAAC,cAAcA,CAAA,CAAG,CACtB,KAAM,CAAAC,KAAK,CAAGJ,WAAW,CAAC,KAAO,CAC7BK,OAAO,CAAE,IAAI,CAAE;AACfC,UAAU,CAAE,EAChB,CAAC,CAAC,CAAC,CACH,KAAM,CAAAC,OAAO,CAAGP,WAAW,CAAC,IAAME,wBAAwB,CAACE,KAAK,CAAC,CAAC,CAClEH,gBAAgB,CAAC,IAAM,CACnBG,KAAK,CAACE,UAAU,CAACE,OAAO,CAAEC,SAAS,EAAKA,SAAS,CAACC,IAAI,CAAC,CAAC,CAAC,CAC7D,CAAC,CAAC,CACF,MAAO,CAACN,KAAK,CAAEG,OAAO,CAAC,CAC3B,CAEA,OAASJ,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}