{"ast":null,"code":"import{isAnimationControls}from'../../../animation/utils/is-animation-controls.mjs';import{createAnimationState}from'../../../render/utils/animation-state.mjs';import{Feature}from'../Feature.mjs';class AnimationFeature extends Feature{/**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */constructor(node){super(node);node.animationState||(node.animationState=createAnimationState(node));}updateAnimationControlsSubscription(){const{animate}=this.node.getProps();if(isAnimationControls(animate)){this.unmountControls=animate.subscribe(this.node);}}/**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */mount(){this.updateAnimationControlsSubscription();}update(){const{animate}=this.node.getProps();const{animate:prevAnimate}=this.node.prevProps||{};if(animate!==prevAnimate){this.updateAnimationControlsSubscription();}}unmount(){var _this$unmountControls;this.node.animationState.reset();(_this$unmountControls=this.unmountControls)===null||_this$unmountControls===void 0?void 0:_this$unmountControls.call(this);}}export{AnimationFeature};","map":{"version":3,"names":["isAnimationControls","createAnimationState","Feature","AnimationFeature","constructor","node","animationState","updateAnimationControlsSubscription","animate","getProps","unmountControls","subscribe","mount","update","prevAnimate","prevProps","unmount","_this$unmountControls","reset","call"],"sources":["/home/antisyn/portfolio/src/components/node_modules/framer-motion/dist/es/motion/features/animation/index.mjs"],"sourcesContent":["import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        this.node.animationState.reset();\n        this.unmountControls?.();\n    }\n}\n\nexport { AnimationFeature };\n"],"mappings":"AAAA,OAASA,mBAAmB,KAAQ,oDAAoD,CACxF,OAASC,oBAAoB,KAAQ,2CAA2C,CAChF,OAASC,OAAO,KAAQ,gBAAgB,CAExC,KAAM,CAAAC,gBAAgB,QAAS,CAAAD,OAAQ,CACnC;AACJ;AACA;AACA;AACA,OACIE,WAAWA,CAACC,IAAI,CAAE,CACd,KAAK,CAACA,IAAI,CAAC,CACXA,IAAI,CAACC,cAAc,GAAKD,IAAI,CAACC,cAAc,CAAGL,oBAAoB,CAACI,IAAI,CAAC,CAAC,CAC7E,CACAE,mCAAmCA,CAAA,CAAG,CAClC,KAAM,CAAEC,OAAQ,CAAC,CAAG,IAAI,CAACH,IAAI,CAACI,QAAQ,CAAC,CAAC,CACxC,GAAIT,mBAAmB,CAACQ,OAAO,CAAC,CAAE,CAC9B,IAAI,CAACE,eAAe,CAAGF,OAAO,CAACG,SAAS,CAAC,IAAI,CAACN,IAAI,CAAC,CACvD,CACJ,CACA;AACJ;AACA,OACIO,KAAKA,CAAA,CAAG,CACJ,IAAI,CAACL,mCAAmC,CAAC,CAAC,CAC9C,CACAM,MAAMA,CAAA,CAAG,CACL,KAAM,CAAEL,OAAQ,CAAC,CAAG,IAAI,CAACH,IAAI,CAACI,QAAQ,CAAC,CAAC,CACxC,KAAM,CAAED,OAAO,CAAEM,WAAY,CAAC,CAAG,IAAI,CAACT,IAAI,CAACU,SAAS,EAAI,CAAC,CAAC,CAC1D,GAAIP,OAAO,GAAKM,WAAW,CAAE,CACzB,IAAI,CAACP,mCAAmC,CAAC,CAAC,CAC9C,CACJ,CACAS,OAAOA,CAAA,CAAG,KAAAC,qBAAA,CACN,IAAI,CAACZ,IAAI,CAACC,cAAc,CAACY,KAAK,CAAC,CAAC,CAChC,CAAAD,qBAAA,KAAI,CAACP,eAAe,UAAAO,qBAAA,iBAApBA,qBAAA,CAAAE,IAAA,KAAuB,CAAC,CAC5B,CACJ,CAEA,OAAShB,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}