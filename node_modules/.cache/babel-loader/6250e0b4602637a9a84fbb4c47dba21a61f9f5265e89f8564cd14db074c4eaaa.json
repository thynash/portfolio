{"ast":null,"code":"const generateLinearEasing=function(easing,duration){let resolution=arguments.length>2&&arguments[2]!==undefined?arguments[2]:10;let points=\"\";const numPoints=Math.max(Math.round(duration/resolution),2);for(let i=0;i<numPoints;i++){points+=Math.round(easing(i/(numPoints-1))*10000)/10000+\", \";}return\"linear(\".concat(points.substring(0,points.length-2),\")\");};export{generateLinearEasing};","map":{"version":3,"names":["generateLinearEasing","easing","duration","resolution","arguments","length","undefined","points","numPoints","Math","max","round","i","concat","substring"],"sources":["/home/antisyn/portfolio/src/components/node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs"],"sourcesContent":["const generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += Math.round(easing(i / (numPoints - 1)) * 10000) / 10000 + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n"],"mappings":"AAAA,KAAM,CAAAA,oBAAoB,CAAG,QAAAA,CAACC,MAAM,CAAEC,QAAQ,CAEzC,IADL,CAAAC,UAAU,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,EAAE,CAEX,GAAI,CAAAG,MAAM,CAAG,EAAE,CACf,KAAM,CAAAC,SAAS,CAAGC,IAAI,CAACC,GAAG,CAACD,IAAI,CAACE,KAAK,CAACT,QAAQ,CAAGC,UAAU,CAAC,CAAE,CAAC,CAAC,CAChE,IAAK,GAAI,CAAAS,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGJ,SAAS,CAAEI,CAAC,EAAE,CAAE,CAChCL,MAAM,EAAIE,IAAI,CAACE,KAAK,CAACV,MAAM,CAACW,CAAC,EAAIJ,SAAS,CAAG,CAAC,CAAC,CAAC,CAAG,KAAK,CAAC,CAAG,KAAK,CAAG,IAAI,CAC5E,CACA,gBAAAK,MAAA,CAAiBN,MAAM,CAACO,SAAS,CAAC,CAAC,CAAEP,MAAM,CAACF,MAAM,CAAG,CAAC,CAAC,MAC3D,CAAC,CAED,OAASL,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}