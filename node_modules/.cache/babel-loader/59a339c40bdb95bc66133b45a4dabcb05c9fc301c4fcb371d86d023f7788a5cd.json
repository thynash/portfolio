{"ast":null,"code":"import{mixNumber}from'motion-dom';import{getEasingForSegment,removeItem}from'motion-utils';function eraseKeyframes(sequence,startTime,endTime){for(let i=0;i<sequence.length;i++){const keyframe=sequence[i];if(keyframe.at>startTime&&keyframe.at<endTime){removeItem(sequence,keyframe);// If we remove this item we have to push the pointer back one\ni--;}}}function addKeyframes(sequence,keyframes,easing,offset,startTime,endTime){/**\n     * Erase every existing value between currentTime and targetTime,\n     * this will essentially splice this timeline into any currently\n     * defined ones.\n     */eraseKeyframes(sequence,startTime,endTime);for(let i=0;i<keyframes.length;i++){sequence.push({value:keyframes[i],at:mixNumber(startTime,endTime,offset[i]),easing:getEasingForSegment(easing,i)});}}export{addKeyframes,eraseKeyframes};","map":{"version":3,"names":["mixNumber","getEasingForSegment","removeItem","eraseKeyframes","sequence","startTime","endTime","i","length","keyframe","at","addKeyframes","keyframes","easing","offset","push","value"],"sources":["/home/antisyn/portfolio/src/components/node_modules/framer-motion/dist/es/animation/sequence/utils/edit.mjs"],"sourcesContent":["import { mixNumber } from 'motion-dom';\nimport { getEasingForSegment, removeItem } from 'motion-utils';\n\nfunction eraseKeyframes(sequence, startTime, endTime) {\n    for (let i = 0; i < sequence.length; i++) {\n        const keyframe = sequence[i];\n        if (keyframe.at > startTime && keyframe.at < endTime) {\n            removeItem(sequence, keyframe);\n            // If we remove this item we have to push the pointer back one\n            i--;\n        }\n    }\n}\nfunction addKeyframes(sequence, keyframes, easing, offset, startTime, endTime) {\n    /**\n     * Erase every existing value between currentTime and targetTime,\n     * this will essentially splice this timeline into any currently\n     * defined ones.\n     */\n    eraseKeyframes(sequence, startTime, endTime);\n    for (let i = 0; i < keyframes.length; i++) {\n        sequence.push({\n            value: keyframes[i],\n            at: mixNumber(startTime, endTime, offset[i]),\n            easing: getEasingForSegment(easing, i),\n        });\n    }\n}\n\nexport { addKeyframes, eraseKeyframes };\n"],"mappings":"AAAA,OAASA,SAAS,KAAQ,YAAY,CACtC,OAASC,mBAAmB,CAAEC,UAAU,KAAQ,cAAc,CAE9D,QAAS,CAAAC,cAAcA,CAACC,QAAQ,CAAEC,SAAS,CAAEC,OAAO,CAAE,CAClD,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGH,QAAQ,CAACI,MAAM,CAAED,CAAC,EAAE,CAAE,CACtC,KAAM,CAAAE,QAAQ,CAAGL,QAAQ,CAACG,CAAC,CAAC,CAC5B,GAAIE,QAAQ,CAACC,EAAE,CAAGL,SAAS,EAAII,QAAQ,CAACC,EAAE,CAAGJ,OAAO,CAAE,CAClDJ,UAAU,CAACE,QAAQ,CAAEK,QAAQ,CAAC,CAC9B;AACAF,CAAC,EAAE,CACP,CACJ,CACJ,CACA,QAAS,CAAAI,YAAYA,CAACP,QAAQ,CAAEQ,SAAS,CAAEC,MAAM,CAAEC,MAAM,CAAET,SAAS,CAAEC,OAAO,CAAE,CAC3E;AACJ;AACA;AACA;AACA,OACIH,cAAc,CAACC,QAAQ,CAAEC,SAAS,CAAEC,OAAO,CAAC,CAC5C,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGK,SAAS,CAACJ,MAAM,CAAED,CAAC,EAAE,CAAE,CACvCH,QAAQ,CAACW,IAAI,CAAC,CACVC,KAAK,CAAEJ,SAAS,CAACL,CAAC,CAAC,CACnBG,EAAE,CAAEV,SAAS,CAACK,SAAS,CAAEC,OAAO,CAAEQ,MAAM,CAACP,CAAC,CAAC,CAAC,CAC5CM,MAAM,CAAEZ,mBAAmB,CAACY,MAAM,CAAEN,CAAC,CACzC,CAAC,CAAC,CACN,CACJ,CAEA,OAASI,YAAY,CAAER,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}