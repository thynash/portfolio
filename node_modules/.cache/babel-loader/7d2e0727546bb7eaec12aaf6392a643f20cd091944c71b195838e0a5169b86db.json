{"ast":null,"code":"import{pipe}from'motion-utils';import{addDomEvent}from'../events/add-dom-event.mjs';import{Feature}from'../motion/features/Feature.mjs';class FocusGesture extends Feature{constructor(){super(...arguments);this.isActive=false;}onFocus(){let isFocusVisible=false;/**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */try{isFocusVisible=this.node.current.matches(\":focus-visible\");}catch(e){isFocusVisible=true;}if(!isFocusVisible||!this.node.animationState)return;this.node.animationState.setActive(\"whileFocus\",true);this.isActive=true;}onBlur(){if(!this.isActive||!this.node.animationState)return;this.node.animationState.setActive(\"whileFocus\",false);this.isActive=false;}mount(){this.unmount=pipe(addDomEvent(this.node.current,\"focus\",()=>this.onFocus()),addDomEvent(this.node.current,\"blur\",()=>this.onBlur()));}unmount(){}}export{FocusGesture};","map":{"version":3,"names":["pipe","addDomEvent","Feature","FocusGesture","constructor","arguments","isActive","onFocus","isFocusVisible","node","current","matches","e","animationState","setActive","onBlur","mount","unmount"],"sources":["/home/antisyn/portfolio/src/components/node_modules/framer-motion/dist/es/gestures/focus.mjs"],"sourcesContent":["import { pipe } from 'motion-utils';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n"],"mappings":"AAAA,OAASA,IAAI,KAAQ,cAAc,CACnC,OAASC,WAAW,KAAQ,6BAA6B,CACzD,OAASC,OAAO,KAAQ,gCAAgC,CAExD,KAAM,CAAAC,YAAY,QAAS,CAAAD,OAAQ,CAC/BE,WAAWA,CAAA,CAAG,CACV,KAAK,CAAC,GAAGC,SAAS,CAAC,CACnB,IAAI,CAACC,QAAQ,CAAG,KAAK,CACzB,CACAC,OAAOA,CAAA,CAAG,CACN,GAAI,CAAAC,cAAc,CAAG,KAAK,CAC1B;AACR;AACA;AACA;AACA;AACA,WACQ,GAAI,CACAA,cAAc,CAAG,IAAI,CAACC,IAAI,CAACC,OAAO,CAACC,OAAO,CAAC,gBAAgB,CAAC,CAChE,CACA,MAAOC,CAAC,CAAE,CACNJ,cAAc,CAAG,IAAI,CACzB,CACA,GAAI,CAACA,cAAc,EAAI,CAAC,IAAI,CAACC,IAAI,CAACI,cAAc,CAC5C,OACJ,IAAI,CAACJ,IAAI,CAACI,cAAc,CAACC,SAAS,CAAC,YAAY,CAAE,IAAI,CAAC,CACtD,IAAI,CAACR,QAAQ,CAAG,IAAI,CACxB,CACAS,MAAMA,CAAA,CAAG,CACL,GAAI,CAAC,IAAI,CAACT,QAAQ,EAAI,CAAC,IAAI,CAACG,IAAI,CAACI,cAAc,CAC3C,OACJ,IAAI,CAACJ,IAAI,CAACI,cAAc,CAACC,SAAS,CAAC,YAAY,CAAE,KAAK,CAAC,CACvD,IAAI,CAACR,QAAQ,CAAG,KAAK,CACzB,CACAU,KAAKA,CAAA,CAAG,CACJ,IAAI,CAACC,OAAO,CAAGjB,IAAI,CAACC,WAAW,CAAC,IAAI,CAACQ,IAAI,CAACC,OAAO,CAAE,OAAO,CAAE,IAAM,IAAI,CAACH,OAAO,CAAC,CAAC,CAAC,CAAEN,WAAW,CAAC,IAAI,CAACQ,IAAI,CAACC,OAAO,CAAE,MAAM,CAAE,IAAM,IAAI,CAACK,MAAM,CAAC,CAAC,CAAC,CAAC,CACnJ,CACAE,OAAOA,CAAA,CAAG,CAAE,CAChB,CAEA,OAASd,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}