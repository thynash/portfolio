{"ast":null,"code":"class GroupAnimation{constructor(animations){// Bound to accomadate common `return animation.stop` pattern\nthis.stop=()=>this.runAll(\"stop\");this.animations=animations.filter(Boolean);}get finished(){return Promise.all(this.animations.map(animation=>animation.finished));}/**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */getAll(propName){return this.animations[0][propName];}setAll(propName,newValue){for(let i=0;i<this.animations.length;i++){this.animations[i][propName]=newValue;}}attachTimeline(timeline){const subscriptions=this.animations.map(animation=>animation.attachTimeline(timeline));return()=>{subscriptions.forEach((cancel,i)=>{cancel&&cancel();this.animations[i].stop();});};}get time(){return this.getAll(\"time\");}set time(time){this.setAll(\"time\",time);}get speed(){return this.getAll(\"speed\");}set speed(speed){this.setAll(\"speed\",speed);}get state(){return this.getAll(\"state\");}get startTime(){return this.getAll(\"startTime\");}get duration(){let max=0;for(let i=0;i<this.animations.length;i++){max=Math.max(max,this.animations[i].duration);}return max;}runAll(methodName){this.animations.forEach(controls=>controls[methodName]());}play(){this.runAll(\"play\");}pause(){this.runAll(\"pause\");}cancel(){this.runAll(\"cancel\");}complete(){this.runAll(\"complete\");}}export{GroupAnimation};","map":{"version":3,"names":["GroupAnimation","constructor","animations","stop","runAll","filter","Boolean","finished","Promise","all","map","animation","getAll","propName","setAll","newValue","i","length","attachTimeline","timeline","subscriptions","forEach","cancel","time","speed","state","startTime","duration","max","Math","methodName","controls","play","pause","complete"],"sources":["/home/antisyn/portfolio/src/components/node_modules/motion-dom/dist/es/animation/GroupAnimation.mjs"],"sourcesContent":["class GroupAnimation {\n    constructor(animations) {\n        // Bound to accomadate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    get finished() {\n        return Promise.all(this.animations.map((animation) => animation.finished));\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline) {\n        const subscriptions = this.animations.map((animation) => animation.attachTimeline(timeline));\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get state() {\n        return this.getAll(\"state\");\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupAnimation };\n"],"mappings":"AAAA,KAAM,CAAAA,cAAe,CACjBC,WAAWA,CAACC,UAAU,CAAE,CACpB;AACA,IAAI,CAACC,IAAI,CAAG,IAAM,IAAI,CAACC,MAAM,CAAC,MAAM,CAAC,CACrC,IAAI,CAACF,UAAU,CAAGA,UAAU,CAACG,MAAM,CAACC,OAAO,CAAC,CAChD,CACA,GAAI,CAAAC,QAAQA,CAAA,CAAG,CACX,MAAO,CAAAC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACP,UAAU,CAACQ,GAAG,CAAEC,SAAS,EAAKA,SAAS,CAACJ,QAAQ,CAAC,CAAC,CAC9E,CACA;AACJ;AACA,OACIK,MAAMA,CAACC,QAAQ,CAAE,CACb,MAAO,KAAI,CAACX,UAAU,CAAC,CAAC,CAAC,CAACW,QAAQ,CAAC,CACvC,CACAC,MAAMA,CAACD,QAAQ,CAAEE,QAAQ,CAAE,CACvB,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAG,IAAI,CAACd,UAAU,CAACe,MAAM,CAAED,CAAC,EAAE,CAAE,CAC7C,IAAI,CAACd,UAAU,CAACc,CAAC,CAAC,CAACH,QAAQ,CAAC,CAAGE,QAAQ,CAC3C,CACJ,CACAG,cAAcA,CAACC,QAAQ,CAAE,CACrB,KAAM,CAAAC,aAAa,CAAG,IAAI,CAAClB,UAAU,CAACQ,GAAG,CAAEC,SAAS,EAAKA,SAAS,CAACO,cAAc,CAACC,QAAQ,CAAC,CAAC,CAC5F,MAAO,IAAM,CACTC,aAAa,CAACC,OAAO,CAAC,CAACC,MAAM,CAAEN,CAAC,GAAK,CACjCM,MAAM,EAAIA,MAAM,CAAC,CAAC,CAClB,IAAI,CAACpB,UAAU,CAACc,CAAC,CAAC,CAACb,IAAI,CAAC,CAAC,CAC7B,CAAC,CAAC,CACN,CAAC,CACL,CACA,GAAI,CAAAoB,IAAIA,CAAA,CAAG,CACP,MAAO,KAAI,CAACX,MAAM,CAAC,MAAM,CAAC,CAC9B,CACA,GAAI,CAAAW,IAAIA,CAACA,IAAI,CAAE,CACX,IAAI,CAACT,MAAM,CAAC,MAAM,CAAES,IAAI,CAAC,CAC7B,CACA,GAAI,CAAAC,KAAKA,CAAA,CAAG,CACR,MAAO,KAAI,CAACZ,MAAM,CAAC,OAAO,CAAC,CAC/B,CACA,GAAI,CAAAY,KAAKA,CAACA,KAAK,CAAE,CACb,IAAI,CAACV,MAAM,CAAC,OAAO,CAAEU,KAAK,CAAC,CAC/B,CACA,GAAI,CAAAC,KAAKA,CAAA,CAAG,CACR,MAAO,KAAI,CAACb,MAAM,CAAC,OAAO,CAAC,CAC/B,CACA,GAAI,CAAAc,SAASA,CAAA,CAAG,CACZ,MAAO,KAAI,CAACd,MAAM,CAAC,WAAW,CAAC,CACnC,CACA,GAAI,CAAAe,QAAQA,CAAA,CAAG,CACX,GAAI,CAAAC,GAAG,CAAG,CAAC,CACX,IAAK,GAAI,CAAAZ,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAG,IAAI,CAACd,UAAU,CAACe,MAAM,CAAED,CAAC,EAAE,CAAE,CAC7CY,GAAG,CAAGC,IAAI,CAACD,GAAG,CAACA,GAAG,CAAE,IAAI,CAAC1B,UAAU,CAACc,CAAC,CAAC,CAACW,QAAQ,CAAC,CACpD,CACA,MAAO,CAAAC,GAAG,CACd,CACAxB,MAAMA,CAAC0B,UAAU,CAAE,CACf,IAAI,CAAC5B,UAAU,CAACmB,OAAO,CAAEU,QAAQ,EAAKA,QAAQ,CAACD,UAAU,CAAC,CAAC,CAAC,CAAC,CACjE,CACAE,IAAIA,CAAA,CAAG,CACH,IAAI,CAAC5B,MAAM,CAAC,MAAM,CAAC,CACvB,CACA6B,KAAKA,CAAA,CAAG,CACJ,IAAI,CAAC7B,MAAM,CAAC,OAAO,CAAC,CACxB,CACAkB,MAAMA,CAAA,CAAG,CACL,IAAI,CAAClB,MAAM,CAAC,QAAQ,CAAC,CACzB,CACA8B,QAAQA,CAAA,CAAG,CACP,IAAI,CAAC9B,MAAM,CAAC,UAAU,CAAC,CAC3B,CACJ,CAEA,OAASJ,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}