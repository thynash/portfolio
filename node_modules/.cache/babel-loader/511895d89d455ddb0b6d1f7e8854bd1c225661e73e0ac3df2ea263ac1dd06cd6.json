{"ast":null,"code":"const namedEdges={start:0,center:0.5,end:1};function resolveEdge(edge,length){let inset=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;let delta=0;/**\n     * If we have this edge defined as a preset, replace the definition\n     * with the numerical value.\n     */if(edge in namedEdges){edge=namedEdges[edge];}/**\n     * Handle unit values\n     */if(typeof edge===\"string\"){const asNumber=parseFloat(edge);if(edge.endsWith(\"px\")){delta=asNumber;}else if(edge.endsWith(\"%\")){edge=asNumber/100;}else if(edge.endsWith(\"vw\")){delta=asNumber/100*document.documentElement.clientWidth;}else if(edge.endsWith(\"vh\")){delta=asNumber/100*document.documentElement.clientHeight;}else{edge=asNumber;}}/**\n     * If the edge is defined as a number, handle as a progress value.\n     */if(typeof edge===\"number\"){delta=length*edge;}return inset+delta;}export{namedEdges,resolveEdge};","map":{"version":3,"names":["namedEdges","start","center","end","resolveEdge","edge","length","inset","arguments","undefined","delta","asNumber","parseFloat","endsWith","document","documentElement","clientWidth","clientHeight"],"sources":["/home/antisyn/portfolio/src/components/node_modules/framer-motion/dist/es/render/dom/scroll/offsets/edge.mjs"],"sourcesContent":["const namedEdges = {\n    start: 0,\n    center: 0.5,\n    end: 1,\n};\nfunction resolveEdge(edge, length, inset = 0) {\n    let delta = 0;\n    /**\n     * If we have this edge defined as a preset, replace the definition\n     * with the numerical value.\n     */\n    if (edge in namedEdges) {\n        edge = namedEdges[edge];\n    }\n    /**\n     * Handle unit values\n     */\n    if (typeof edge === \"string\") {\n        const asNumber = parseFloat(edge);\n        if (edge.endsWith(\"px\")) {\n            delta = asNumber;\n        }\n        else if (edge.endsWith(\"%\")) {\n            edge = asNumber / 100;\n        }\n        else if (edge.endsWith(\"vw\")) {\n            delta = (asNumber / 100) * document.documentElement.clientWidth;\n        }\n        else if (edge.endsWith(\"vh\")) {\n            delta = (asNumber / 100) * document.documentElement.clientHeight;\n        }\n        else {\n            edge = asNumber;\n        }\n    }\n    /**\n     * If the edge is defined as a number, handle as a progress value.\n     */\n    if (typeof edge === \"number\") {\n        delta = length * edge;\n    }\n    return inset + delta;\n}\n\nexport { namedEdges, resolveEdge };\n"],"mappings":"AAAA,KAAM,CAAAA,UAAU,CAAG,CACfC,KAAK,CAAE,CAAC,CACRC,MAAM,CAAE,GAAG,CACXC,GAAG,CAAE,CACT,CAAC,CACD,QAAS,CAAAC,WAAWA,CAACC,IAAI,CAAEC,MAAM,CAAa,IAAX,CAAAC,KAAK,CAAAC,SAAA,CAAAF,MAAA,IAAAE,SAAA,MAAAC,SAAA,CAAAD,SAAA,IAAG,CAAC,CACxC,GAAI,CAAAE,KAAK,CAAG,CAAC,CACb;AACJ;AACA;AACA,OACI,GAAIL,IAAI,GAAI,CAAAL,UAAU,CAAE,CACpBK,IAAI,CAAGL,UAAU,CAACK,IAAI,CAAC,CAC3B,CACA;AACJ;AACA,OACI,GAAI,MAAO,CAAAA,IAAI,GAAK,QAAQ,CAAE,CAC1B,KAAM,CAAAM,QAAQ,CAAGC,UAAU,CAACP,IAAI,CAAC,CACjC,GAAIA,IAAI,CAACQ,QAAQ,CAAC,IAAI,CAAC,CAAE,CACrBH,KAAK,CAAGC,QAAQ,CACpB,CAAC,IACI,IAAIN,IAAI,CAACQ,QAAQ,CAAC,GAAG,CAAC,CAAE,CACzBR,IAAI,CAAGM,QAAQ,CAAG,GAAG,CACzB,CAAC,IACI,IAAIN,IAAI,CAACQ,QAAQ,CAAC,IAAI,CAAC,CAAE,CAC1BH,KAAK,CAAIC,QAAQ,CAAG,GAAG,CAAIG,QAAQ,CAACC,eAAe,CAACC,WAAW,CACnE,CAAC,IACI,IAAIX,IAAI,CAACQ,QAAQ,CAAC,IAAI,CAAC,CAAE,CAC1BH,KAAK,CAAIC,QAAQ,CAAG,GAAG,CAAIG,QAAQ,CAACC,eAAe,CAACE,YAAY,CACpE,CAAC,IACI,CACDZ,IAAI,CAAGM,QAAQ,CACnB,CACJ,CACA;AACJ;AACA,OACI,GAAI,MAAO,CAAAN,IAAI,GAAK,QAAQ,CAAE,CAC1BK,KAAK,CAAGJ,MAAM,CAAGD,IAAI,CACzB,CACA,MAAO,CAAAE,KAAK,CAAGG,KAAK,CACxB,CAEA,OAASV,UAAU,CAAEI,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}