{"ast":null,"code":"import{activeAnimations}from'./animation-count.mjs';import{statsBuffer}from'./buffer.mjs';import{frame,cancelFrame,frameData}from'../frameloop/frame.mjs';function record(){const{value}=statsBuffer;if(value===null){cancelFrame(record);return;}value.frameloop.rate.push(frameData.delta);value.animations.mainThread.push(activeAnimations.mainThread);value.animations.waapi.push(activeAnimations.waapi);value.animations.layout.push(activeAnimations.layout);}function mean(values){return values.reduce((acc,value)=>acc+value,0)/values.length;}function summarise(values){let calcAverage=arguments.length>1&&arguments[1]!==undefined?arguments[1]:mean;if(values.length===0){return{min:0,max:0,avg:0};}return{min:Math.min(...values),max:Math.max(...values),avg:calcAverage(values)};}const msToFps=ms=>Math.round(1000/ms);function clearStatsBuffer(){statsBuffer.value=null;statsBuffer.addProjectionMetrics=null;}function reportStats(){const{value}=statsBuffer;if(!value){throw new Error(\"Stats are not being measured\");}clearStatsBuffer();cancelFrame(record);const summary={frameloop:{setup:summarise(value.frameloop.setup),rate:summarise(value.frameloop.rate),read:summarise(value.frameloop.read),resolveKeyframes:summarise(value.frameloop.resolveKeyframes),preUpdate:summarise(value.frameloop.preUpdate),update:summarise(value.frameloop.update),preRender:summarise(value.frameloop.preRender),render:summarise(value.frameloop.render),postRender:summarise(value.frameloop.postRender)},animations:{mainThread:summarise(value.animations.mainThread),waapi:summarise(value.animations.waapi),layout:summarise(value.animations.layout)},layoutProjection:{nodes:summarise(value.layoutProjection.nodes),calculatedTargetDeltas:summarise(value.layoutProjection.calculatedTargetDeltas),calculatedProjections:summarise(value.layoutProjection.calculatedProjections)}};/**\n     * Convert the rate to FPS\n     */const{rate}=summary.frameloop;rate.min=msToFps(rate.min);rate.max=msToFps(rate.max);rate.avg=msToFps(rate.avg);[rate.min,rate.max]=[rate.max,rate.min];return summary;}function recordStats(){if(statsBuffer.value){clearStatsBuffer();throw new Error(\"Stats are already being measured\");}const newStatsBuffer=statsBuffer;newStatsBuffer.value={frameloop:{setup:[],rate:[],read:[],resolveKeyframes:[],preUpdate:[],update:[],preRender:[],render:[],postRender:[]},animations:{mainThread:[],waapi:[],layout:[]},layoutProjection:{nodes:[],calculatedTargetDeltas:[],calculatedProjections:[]}};newStatsBuffer.addProjectionMetrics=metrics=>{const{layoutProjection}=newStatsBuffer.value;layoutProjection.nodes.push(metrics.nodes);layoutProjection.calculatedTargetDeltas.push(metrics.calculatedTargetDeltas);layoutProjection.calculatedProjections.push(metrics.calculatedProjections);};frame.postRender(record,true);return reportStats;}export{recordStats};","map":{"version":3,"names":["activeAnimations","statsBuffer","frame","cancelFrame","frameData","record","value","frameloop","rate","push","delta","animations","mainThread","waapi","layout","mean","values","reduce","acc","length","summarise","calcAverage","arguments","undefined","min","max","avg","Math","msToFps","ms","round","clearStatsBuffer","addProjectionMetrics","reportStats","Error","summary","setup","read","resolveKeyframes","preUpdate","update","preRender","render","postRender","layoutProjection","nodes","calculatedTargetDeltas","calculatedProjections","recordStats","newStatsBuffer","metrics"],"sources":["/home/antisyn/portfolio/src/components/node_modules/motion-dom/dist/es/stats/index.mjs"],"sourcesContent":["import { activeAnimations } from './animation-count.mjs';\nimport { statsBuffer } from './buffer.mjs';\nimport { frame, cancelFrame, frameData } from '../frameloop/frame.mjs';\n\nfunction record() {\n    const { value } = statsBuffer;\n    if (value === null) {\n        cancelFrame(record);\n        return;\n    }\n    value.frameloop.rate.push(frameData.delta);\n    value.animations.mainThread.push(activeAnimations.mainThread);\n    value.animations.waapi.push(activeAnimations.waapi);\n    value.animations.layout.push(activeAnimations.layout);\n}\nfunction mean(values) {\n    return values.reduce((acc, value) => acc + value, 0) / values.length;\n}\nfunction summarise(values, calcAverage = mean) {\n    if (values.length === 0) {\n        return {\n            min: 0,\n            max: 0,\n            avg: 0,\n        };\n    }\n    return {\n        min: Math.min(...values),\n        max: Math.max(...values),\n        avg: calcAverage(values),\n    };\n}\nconst msToFps = (ms) => Math.round(1000 / ms);\nfunction clearStatsBuffer() {\n    statsBuffer.value = null;\n    statsBuffer.addProjectionMetrics = null;\n}\nfunction reportStats() {\n    const { value } = statsBuffer;\n    if (!value) {\n        throw new Error(\"Stats are not being measured\");\n    }\n    clearStatsBuffer();\n    cancelFrame(record);\n    const summary = {\n        frameloop: {\n            setup: summarise(value.frameloop.setup),\n            rate: summarise(value.frameloop.rate),\n            read: summarise(value.frameloop.read),\n            resolveKeyframes: summarise(value.frameloop.resolveKeyframes),\n            preUpdate: summarise(value.frameloop.preUpdate),\n            update: summarise(value.frameloop.update),\n            preRender: summarise(value.frameloop.preRender),\n            render: summarise(value.frameloop.render),\n            postRender: summarise(value.frameloop.postRender),\n        },\n        animations: {\n            mainThread: summarise(value.animations.mainThread),\n            waapi: summarise(value.animations.waapi),\n            layout: summarise(value.animations.layout),\n        },\n        layoutProjection: {\n            nodes: summarise(value.layoutProjection.nodes),\n            calculatedTargetDeltas: summarise(value.layoutProjection.calculatedTargetDeltas),\n            calculatedProjections: summarise(value.layoutProjection.calculatedProjections),\n        },\n    };\n    /**\n     * Convert the rate to FPS\n     */\n    const { rate } = summary.frameloop;\n    rate.min = msToFps(rate.min);\n    rate.max = msToFps(rate.max);\n    rate.avg = msToFps(rate.avg);\n    [rate.min, rate.max] = [rate.max, rate.min];\n    return summary;\n}\nfunction recordStats() {\n    if (statsBuffer.value) {\n        clearStatsBuffer();\n        throw new Error(\"Stats are already being measured\");\n    }\n    const newStatsBuffer = statsBuffer;\n    newStatsBuffer.value = {\n        frameloop: {\n            setup: [],\n            rate: [],\n            read: [],\n            resolveKeyframes: [],\n            preUpdate: [],\n            update: [],\n            preRender: [],\n            render: [],\n            postRender: [],\n        },\n        animations: {\n            mainThread: [],\n            waapi: [],\n            layout: [],\n        },\n        layoutProjection: {\n            nodes: [],\n            calculatedTargetDeltas: [],\n            calculatedProjections: [],\n        },\n    };\n    newStatsBuffer.addProjectionMetrics = (metrics) => {\n        const { layoutProjection } = newStatsBuffer.value;\n        layoutProjection.nodes.push(metrics.nodes);\n        layoutProjection.calculatedTargetDeltas.push(metrics.calculatedTargetDeltas);\n        layoutProjection.calculatedProjections.push(metrics.calculatedProjections);\n    };\n    frame.postRender(record, true);\n    return reportStats;\n}\n\nexport { recordStats };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}