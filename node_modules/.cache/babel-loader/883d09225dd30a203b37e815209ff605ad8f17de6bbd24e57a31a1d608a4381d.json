{"ast":null,"code":"// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p,q,t){if(t<0)t+=1;if(t>1)t-=1;if(t<1/6)return p+(q-p)*6*t;if(t<1/2)return q;if(t<2/3)return p+(q-p)*(2/3-t)*6;return p;}function hslaToRgba(_ref){let{hue,saturation,lightness,alpha}=_ref;hue/=360;saturation/=100;lightness/=100;let red=0;let green=0;let blue=0;if(!saturation){red=green=blue=lightness;}else{const q=lightness<0.5?lightness*(1+saturation):lightness+saturation-lightness*saturation;const p=2*lightness-q;red=hueToRgb(p,q,hue+1/3);green=hueToRgb(p,q,hue);blue=hueToRgb(p,q,hue-1/3);}return{red:Math.round(red*255),green:Math.round(green*255),blue:Math.round(blue*255),alpha};}export{hslaToRgba};","map":{"version":3,"names":["hueToRgb","p","q","t","hslaToRgba","_ref","hue","saturation","lightness","alpha","red","green","blue","Math","round"],"sources":["/home/antisyn/portfolio/src/components/node_modules/motion-dom/dist/es/value/types/color/hsla-to-rgba.mjs"],"sourcesContent":["// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n"],"mappings":"AAAA;AACA,QAAS,CAAAA,QAAQA,CAACC,CAAC,CAAEC,CAAC,CAAEC,CAAC,CAAE,CACvB,GAAIA,CAAC,CAAG,CAAC,CACLA,CAAC,EAAI,CAAC,CACV,GAAIA,CAAC,CAAG,CAAC,CACLA,CAAC,EAAI,CAAC,CACV,GAAIA,CAAC,CAAG,CAAC,CAAG,CAAC,CACT,MAAO,CAAAF,CAAC,CAAG,CAACC,CAAC,CAAGD,CAAC,EAAI,CAAC,CAAGE,CAAC,CAC9B,GAAIA,CAAC,CAAG,CAAC,CAAG,CAAC,CACT,MAAO,CAAAD,CAAC,CACZ,GAAIC,CAAC,CAAG,CAAC,CAAG,CAAC,CACT,MAAO,CAAAF,CAAC,CAAG,CAACC,CAAC,CAAGD,CAAC,GAAK,CAAC,CAAG,CAAC,CAAGE,CAAC,CAAC,CAAG,CAAC,CACxC,MAAO,CAAAF,CAAC,CACZ,CACA,QAAS,CAAAG,UAAUA,CAAAC,IAAA,CAAwC,IAAvC,CAAEC,GAAG,CAAEC,UAAU,CAAEC,SAAS,CAAEC,KAAM,CAAC,CAAAJ,IAAA,CACrDC,GAAG,EAAI,GAAG,CACVC,UAAU,EAAI,GAAG,CACjBC,SAAS,EAAI,GAAG,CAChB,GAAI,CAAAE,GAAG,CAAG,CAAC,CACX,GAAI,CAAAC,KAAK,CAAG,CAAC,CACb,GAAI,CAAAC,IAAI,CAAG,CAAC,CACZ,GAAI,CAACL,UAAU,CAAE,CACbG,GAAG,CAAGC,KAAK,CAAGC,IAAI,CAAGJ,SAAS,CAClC,CAAC,IACI,CACD,KAAM,CAAAN,CAAC,CAAGM,SAAS,CAAG,GAAG,CACnBA,SAAS,EAAI,CAAC,CAAGD,UAAU,CAAC,CAC5BC,SAAS,CAAGD,UAAU,CAAGC,SAAS,CAAGD,UAAU,CACrD,KAAM,CAAAN,CAAC,CAAG,CAAC,CAAGO,SAAS,CAAGN,CAAC,CAC3BQ,GAAG,CAAGV,QAAQ,CAACC,CAAC,CAAEC,CAAC,CAAEI,GAAG,CAAG,CAAC,CAAG,CAAC,CAAC,CACjCK,KAAK,CAAGX,QAAQ,CAACC,CAAC,CAAEC,CAAC,CAAEI,GAAG,CAAC,CAC3BM,IAAI,CAAGZ,QAAQ,CAACC,CAAC,CAAEC,CAAC,CAAEI,GAAG,CAAG,CAAC,CAAG,CAAC,CAAC,CACtC,CACA,MAAO,CACHI,GAAG,CAAEG,IAAI,CAACC,KAAK,CAACJ,GAAG,CAAG,GAAG,CAAC,CAC1BC,KAAK,CAAEE,IAAI,CAACC,KAAK,CAACH,KAAK,CAAG,GAAG,CAAC,CAC9BC,IAAI,CAAEC,IAAI,CAACC,KAAK,CAACF,IAAI,CAAG,GAAG,CAAC,CAC5BH,KACJ,CAAC,CACL,CAEA,OAASL,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}