{"ast":null,"code":"function getValueState(visualElement){const state=[{},{}];visualElement===null||visualElement===void 0?void 0:visualElement.values.forEach((value,key)=>{state[0][key]=value.get();state[1][key]=value.getVelocity();});return state;}function resolveVariantFromProps(props,definition,custom,visualElement){/**\n     * If the variant definition is a function, resolve.\n     */if(typeof definition===\"function\"){const[current,velocity]=getValueState(visualElement);definition=definition(custom!==undefined?custom:props.custom,current,velocity);}/**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */if(typeof definition===\"string\"){definition=props.variants&&props.variants[definition];}/**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */if(typeof definition===\"function\"){const[current,velocity]=getValueState(visualElement);definition=definition(custom!==undefined?custom:props.custom,current,velocity);}return definition;}export{resolveVariantFromProps};","map":{"version":3,"names":["getValueState","visualElement","state","values","forEach","value","key","get","getVelocity","resolveVariantFromProps","props","definition","custom","current","velocity","undefined","variants"],"sources":["/home/antisyn/portfolio/src/components/node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs"],"sourcesContent":["function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement?.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n"],"mappings":"AAAA,QAAS,CAAAA,aAAaA,CAACC,aAAa,CAAE,CAClC,KAAM,CAAAC,KAAK,CAAG,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CACtBD,aAAa,SAAbA,aAAa,iBAAbA,aAAa,CAAEE,MAAM,CAACC,OAAO,CAAC,CAACC,KAAK,CAAEC,GAAG,GAAK,CAC1CJ,KAAK,CAAC,CAAC,CAAC,CAACI,GAAG,CAAC,CAAGD,KAAK,CAACE,GAAG,CAAC,CAAC,CAC3BL,KAAK,CAAC,CAAC,CAAC,CAACI,GAAG,CAAC,CAAGD,KAAK,CAACG,WAAW,CAAC,CAAC,CACvC,CAAC,CAAC,CACF,MAAO,CAAAN,KAAK,CAChB,CACA,QAAS,CAAAO,uBAAuBA,CAACC,KAAK,CAAEC,UAAU,CAAEC,MAAM,CAAEX,aAAa,CAAE,CACvE;AACJ;AACA,OACI,GAAI,MAAO,CAAAU,UAAU,GAAK,UAAU,CAAE,CAClC,KAAM,CAACE,OAAO,CAAEC,QAAQ,CAAC,CAAGd,aAAa,CAACC,aAAa,CAAC,CACxDU,UAAU,CAAGA,UAAU,CAACC,MAAM,GAAKG,SAAS,CAAGH,MAAM,CAAGF,KAAK,CAACE,MAAM,CAAEC,OAAO,CAAEC,QAAQ,CAAC,CAC5F,CACA;AACJ;AACA;AACA,OACI,GAAI,MAAO,CAAAH,UAAU,GAAK,QAAQ,CAAE,CAChCA,UAAU,CAAGD,KAAK,CAACM,QAAQ,EAAIN,KAAK,CAACM,QAAQ,CAACL,UAAU,CAAC,CAC7D,CACA;AACJ;AACA;AACA;AACA,OACI,GAAI,MAAO,CAAAA,UAAU,GAAK,UAAU,CAAE,CAClC,KAAM,CAACE,OAAO,CAAEC,QAAQ,CAAC,CAAGd,aAAa,CAACC,aAAa,CAAC,CACxDU,UAAU,CAAGA,UAAU,CAACC,MAAM,GAAKG,SAAS,CAAGH,MAAM,CAAGF,KAAK,CAACE,MAAM,CAAEC,OAAO,CAAEC,QAAQ,CAAC,CAC5F,CACA,MAAO,CAAAH,UAAU,CACrB,CAEA,OAASF,uBAAuB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}