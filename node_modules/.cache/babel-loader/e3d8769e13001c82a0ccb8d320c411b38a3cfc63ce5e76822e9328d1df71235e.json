{"ast":null,"code":"\"use client\";import _objectSpread from\"/home/antisyn/portfolio/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{jsx}from'react/jsx-runtime';import*as React from'react';import{useId,useMemo}from'react';import{PresenceContext}from'../../context/PresenceContext.mjs';import{useConstant}from'../../utils/use-constant.mjs';import{PopChild}from'./PopChild.mjs';const PresenceChild=_ref=>{let{children,initial,isPresent,onExitComplete,custom,presenceAffectsLayout,mode,anchorX}=_ref;const presenceChildren=useConstant(newChildrenMap);const id=useId();let isReusedContext=true;let context=useMemo(()=>{isReusedContext=false;return{id,initial,isPresent,custom,onExitComplete:childId=>{presenceChildren.set(childId,true);for(const isComplete of presenceChildren.values()){if(!isComplete)return;// can stop searching when any is incomplete\n}onExitComplete&&onExitComplete();},register:childId=>{presenceChildren.set(childId,false);return()=>presenceChildren.delete(childId);}};},[isPresent,presenceChildren,onExitComplete]);/**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */if(presenceAffectsLayout&&isReusedContext){context=_objectSpread({},context);}useMemo(()=>{presenceChildren.forEach((_,key)=>presenceChildren.set(key,false));},[isPresent]);/**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */React.useEffect(()=>{!isPresent&&!presenceChildren.size&&onExitComplete&&onExitComplete();},[isPresent]);if(mode===\"popLayout\"){children=jsx(PopChild,{isPresent:isPresent,anchorX:anchorX,children:children});}return jsx(PresenceContext.Provider,{value:context,children:children});};function newChildrenMap(){return new Map();}export{PresenceChild};","map":{"version":3,"names":["_objectSpread","jsx","React","useId","useMemo","PresenceContext","useConstant","PopChild","PresenceChild","_ref","children","initial","isPresent","onExitComplete","custom","presenceAffectsLayout","mode","anchorX","presenceChildren","newChildrenMap","id","isReusedContext","context","childId","set","isComplete","values","register","delete","forEach","_","key","useEffect","size","Provider","value","Map"],"sources":["/home/antisyn/portfolio/src/components/node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs"],"sourcesContent":["\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, anchorX, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    let isReusedContext = true;\n    let context = useMemo(() => {\n        isReusedContext = false;\n        return {\n            id,\n            initial,\n            isPresent,\n            custom,\n            onExitComplete: (childId) => {\n                presenceChildren.set(childId, true);\n                for (const isComplete of presenceChildren.values()) {\n                    if (!isComplete)\n                        return; // can stop searching when any is incomplete\n                }\n                onExitComplete && onExitComplete();\n            },\n            register: (childId) => {\n                presenceChildren.set(childId, false);\n                return () => presenceChildren.delete(childId);\n            },\n        };\n    }, [isPresent, presenceChildren, onExitComplete]);\n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    if (presenceAffectsLayout && isReusedContext) {\n        context = { ...context };\n    }\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = (jsx(PopChild, { isPresent: isPresent, anchorX: anchorX, children: children }));\n    }\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n"],"mappings":"AAAA,YAAY,CAAC,OAAAA,aAAA,wFACb,OAASC,GAAG,KAAQ,mBAAmB,CACvC,MAAO,GAAK,CAAAC,KAAK,KAAM,OAAO,CAC9B,OAASC,KAAK,CAAEC,OAAO,KAAQ,OAAO,CACtC,OAASC,eAAe,KAAQ,mCAAmC,CACnE,OAASC,WAAW,KAAQ,8BAA8B,CAC1D,OAASC,QAAQ,KAAQ,gBAAgB,CAEzC,KAAM,CAAAC,aAAa,CAAGC,IAAA,EAAqG,IAApG,CAAEC,QAAQ,CAAEC,OAAO,CAAEC,SAAS,CAAEC,cAAc,CAAEC,MAAM,CAAEC,qBAAqB,CAAEC,IAAI,CAAEC,OAAS,CAAC,CAAAR,IAAA,CAClH,KAAM,CAAAS,gBAAgB,CAAGZ,WAAW,CAACa,cAAc,CAAC,CACpD,KAAM,CAAAC,EAAE,CAAGjB,KAAK,CAAC,CAAC,CAClB,GAAI,CAAAkB,eAAe,CAAG,IAAI,CAC1B,GAAI,CAAAC,OAAO,CAAGlB,OAAO,CAAC,IAAM,CACxBiB,eAAe,CAAG,KAAK,CACvB,MAAO,CACHD,EAAE,CACFT,OAAO,CACPC,SAAS,CACTE,MAAM,CACND,cAAc,CAAGU,OAAO,EAAK,CACzBL,gBAAgB,CAACM,GAAG,CAACD,OAAO,CAAE,IAAI,CAAC,CACnC,IAAK,KAAM,CAAAE,UAAU,GAAI,CAAAP,gBAAgB,CAACQ,MAAM,CAAC,CAAC,CAAE,CAChD,GAAI,CAACD,UAAU,CACX,OAAQ;AAChB,CACAZ,cAAc,EAAIA,cAAc,CAAC,CAAC,CACtC,CAAC,CACDc,QAAQ,CAAGJ,OAAO,EAAK,CACnBL,gBAAgB,CAACM,GAAG,CAACD,OAAO,CAAE,KAAK,CAAC,CACpC,MAAO,IAAML,gBAAgB,CAACU,MAAM,CAACL,OAAO,CAAC,CACjD,CACJ,CAAC,CACL,CAAC,CAAE,CAACX,SAAS,CAAEM,gBAAgB,CAAEL,cAAc,CAAC,CAAC,CACjD;AACJ;AACA;AACA;AACA,OACI,GAAIE,qBAAqB,EAAIM,eAAe,CAAE,CAC1CC,OAAO,CAAAtB,aAAA,IAAQsB,OAAO,CAAE,CAC5B,CACAlB,OAAO,CAAC,IAAM,CACVc,gBAAgB,CAACW,OAAO,CAAC,CAACC,CAAC,CAAEC,GAAG,GAAKb,gBAAgB,CAACM,GAAG,CAACO,GAAG,CAAE,KAAK,CAAC,CAAC,CAC1E,CAAC,CAAE,CAACnB,SAAS,CAAC,CAAC,CACf;AACJ;AACA;AACA,OACIV,KAAK,CAAC8B,SAAS,CAAC,IAAM,CAClB,CAACpB,SAAS,EACN,CAACM,gBAAgB,CAACe,IAAI,EACtBpB,cAAc,EACdA,cAAc,CAAC,CAAC,CACxB,CAAC,CAAE,CAACD,SAAS,CAAC,CAAC,CACf,GAAII,IAAI,GAAK,WAAW,CAAE,CACtBN,QAAQ,CAAIT,GAAG,CAACM,QAAQ,CAAE,CAAEK,SAAS,CAAEA,SAAS,CAAEK,OAAO,CAAEA,OAAO,CAAEP,QAAQ,CAAEA,QAAS,CAAC,CAAE,CAC9F,CACA,MAAQ,CAAAT,GAAG,CAACI,eAAe,CAAC6B,QAAQ,CAAE,CAAEC,KAAK,CAAEb,OAAO,CAAEZ,QAAQ,CAAEA,QAAS,CAAC,CAAC,CACjF,CAAC,CACD,QAAS,CAAAS,cAAcA,CAAA,CAAG,CACtB,MAAO,IAAI,CAAAiB,GAAG,CAAC,CAAC,CACpB,CAEA,OAAS5B,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}