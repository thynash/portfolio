{"ast":null,"code":"/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */function convertBoundingBoxToBox(_ref){let{top,left,right,bottom}=_ref;return{x:{min:left,max:right},y:{min:top,max:bottom}};}function convertBoxToBoundingBox(_ref2){let{x,y}=_ref2;return{top:y.min,right:x.max,bottom:y.max,left:x.min};}/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */function transformBoxPoints(point,transformPoint){if(!transformPoint)return point;const topLeft=transformPoint({x:point.left,y:point.top});const bottomRight=transformPoint({x:point.right,y:point.bottom});return{top:topLeft.y,left:topLeft.x,bottom:bottomRight.y,right:bottomRight.x};}export{convertBoundingBoxToBox,convertBoxToBoundingBox,transformBoxPoints};","map":{"version":3,"names":["convertBoundingBoxToBox","_ref","top","left","right","bottom","x","min","max","y","convertBoxToBoundingBox","_ref2","transformBoxPoints","point","transformPoint","topLeft","bottomRight"],"sources":["/home/antisyn/portfolio/src/components/node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs"],"sourcesContent":["/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,GACA,QAAS,CAAAA,uBAAuBA,CAAAC,IAAA,CAAgC,IAA/B,CAAEC,GAAG,CAAEC,IAAI,CAAEC,KAAK,CAAEC,MAAQ,CAAC,CAAAJ,IAAA,CAC1D,MAAO,CACHK,CAAC,CAAE,CAAEC,GAAG,CAAEJ,IAAI,CAAEK,GAAG,CAAEJ,KAAM,CAAC,CAC5BK,CAAC,CAAE,CAAEF,GAAG,CAAEL,GAAG,CAAEM,GAAG,CAAEH,MAAO,CAC/B,CAAC,CACL,CACA,QAAS,CAAAK,uBAAuBA,CAAAC,KAAA,CAAW,IAAV,CAAEL,CAAC,CAAEG,CAAE,CAAC,CAAAE,KAAA,CACrC,MAAO,CAAET,GAAG,CAAEO,CAAC,CAACF,GAAG,CAAEH,KAAK,CAAEE,CAAC,CAACE,GAAG,CAAEH,MAAM,CAAEI,CAAC,CAACD,GAAG,CAAEL,IAAI,CAAEG,CAAC,CAACC,GAAI,CAAC,CACnE,CACA;AACA;AACA;AACA;AACA,GACA,QAAS,CAAAK,kBAAkBA,CAACC,KAAK,CAAEC,cAAc,CAAE,CAC/C,GAAI,CAACA,cAAc,CACf,MAAO,CAAAD,KAAK,CAChB,KAAM,CAAAE,OAAO,CAAGD,cAAc,CAAC,CAAER,CAAC,CAAEO,KAAK,CAACV,IAAI,CAAEM,CAAC,CAAEI,KAAK,CAACX,GAAI,CAAC,CAAC,CAC/D,KAAM,CAAAc,WAAW,CAAGF,cAAc,CAAC,CAAER,CAAC,CAAEO,KAAK,CAACT,KAAK,CAAEK,CAAC,CAAEI,KAAK,CAACR,MAAO,CAAC,CAAC,CACvE,MAAO,CACHH,GAAG,CAAEa,OAAO,CAACN,CAAC,CACdN,IAAI,CAAEY,OAAO,CAACT,CAAC,CACfD,MAAM,CAAEW,WAAW,CAACP,CAAC,CACrBL,KAAK,CAAEY,WAAW,CAACV,CACvB,CAAC,CACL,CAEA,OAASN,uBAAuB,CAAEU,uBAAuB,CAAEE,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}