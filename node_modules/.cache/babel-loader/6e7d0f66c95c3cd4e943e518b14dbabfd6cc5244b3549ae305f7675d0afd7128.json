{"ast":null,"code":"import{warning,secondsToMilliseconds,clamp,millisecondsToSeconds}from'motion-utils';import{springDefaults}from'./defaults.mjs';const safeMin=0.001;function findSpring(_ref){let{duration=springDefaults.duration,bounce=springDefaults.bounce,velocity=springDefaults.velocity,mass=springDefaults.mass}=_ref;let envelope;let derivative;warning(duration<=secondsToMilliseconds(springDefaults.maxDuration),\"Spring duration must be 10 seconds or less\");let dampingRatio=1-bounce;/**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */dampingRatio=clamp(springDefaults.minDamping,springDefaults.maxDamping,dampingRatio);duration=clamp(springDefaults.minDuration,springDefaults.maxDuration,millisecondsToSeconds(duration));if(dampingRatio<1){/**\n         * Underdamped spring\n         */envelope=undampedFreq=>{const exponentialDecay=undampedFreq*dampingRatio;const delta=exponentialDecay*duration;const a=exponentialDecay-velocity;const b=calcAngularFreq(undampedFreq,dampingRatio);const c=Math.exp(-delta);return safeMin-a/b*c;};derivative=undampedFreq=>{const exponentialDecay=undampedFreq*dampingRatio;const delta=exponentialDecay*duration;const d=delta*velocity+velocity;const e=Math.pow(dampingRatio,2)*Math.pow(undampedFreq,2)*duration;const f=Math.exp(-delta);const g=calcAngularFreq(Math.pow(undampedFreq,2),dampingRatio);const factor=-envelope(undampedFreq)+safeMin>0?-1:1;return factor*((d-e)*f)/g;};}else{/**\n         * Critically-damped spring\n         */envelope=undampedFreq=>{const a=Math.exp(-undampedFreq*duration);const b=(undampedFreq-velocity)*duration+1;return-safeMin+a*b;};derivative=undampedFreq=>{const a=Math.exp(-undampedFreq*duration);const b=(velocity-undampedFreq)*(duration*duration);return a*b;};}const initialGuess=5/duration;const undampedFreq=approximateRoot(envelope,derivative,initialGuess);duration=secondsToMilliseconds(duration);if(isNaN(undampedFreq)){return{stiffness:springDefaults.stiffness,damping:springDefaults.damping,duration};}else{const stiffness=Math.pow(undampedFreq,2)*mass;return{stiffness,damping:dampingRatio*2*Math.sqrt(mass*stiffness),duration};}}const rootIterations=12;function approximateRoot(envelope,derivative,initialGuess){let result=initialGuess;for(let i=1;i<rootIterations;i++){result=result-envelope(result)/derivative(result);}return result;}function calcAngularFreq(undampedFreq,dampingRatio){return undampedFreq*Math.sqrt(1-dampingRatio*dampingRatio);}export{calcAngularFreq,findSpring};","map":{"version":3,"names":["warning","secondsToMilliseconds","clamp","millisecondsToSeconds","springDefaults","safeMin","findSpring","_ref","duration","bounce","velocity","mass","envelope","derivative","maxDuration","dampingRatio","minDamping","maxDamping","minDuration","undampedFreq","exponentialDecay","delta","a","b","calcAngularFreq","c","Math","exp","d","e","pow","f","g","factor","initialGuess","approximateRoot","isNaN","stiffness","damping","sqrt","rootIterations","result","i"],"sources":["/home/antisyn/portfolio/src/components/node_modules/motion-dom/dist/es/animation/generators/spring/find.mjs"],"sourcesContent":["import { warning, secondsToMilliseconds, clamp, millisecondsToSeconds } from 'motion-utils';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}