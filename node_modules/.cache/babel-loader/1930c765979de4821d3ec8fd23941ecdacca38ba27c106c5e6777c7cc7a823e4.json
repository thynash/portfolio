{"ast":null,"code":"import{microtask}from'motion-dom';import{useContext,useRef,useInsertionEffect,useEffect}from'react';import{optimizedAppearDataAttribute}from'../../animation/optimized-appear/data-id.mjs';import{LazyContext}from'../../context/LazyContext.mjs';import{MotionConfigContext}from'../../context/MotionConfigContext.mjs';import{MotionContext}from'../../context/MotionContext/index.mjs';import{PresenceContext}from'../../context/PresenceContext.mjs';import{SwitchLayoutGroupContext}from'../../context/SwitchLayoutGroupContext.mjs';import{isRefObject}from'../../utils/is-ref-object.mjs';import{useIsomorphicLayoutEffect}from'../../utils/use-isomorphic-effect.mjs';function useVisualElement(Component,visualState,props,createVisualElement,ProjectionNodeConstructor){var _window$MotionHandoff,_window,_window$MotionHasOpti,_window2;const{visualElement:parent}=useContext(MotionContext);const lazyContext=useContext(LazyContext);const presenceContext=useContext(PresenceContext);const reducedMotionConfig=useContext(MotionConfigContext).reducedMotion;const visualElementRef=useRef(null);/**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */createVisualElement=createVisualElement||lazyContext.renderer;if(!visualElementRef.current&&createVisualElement){visualElementRef.current=createVisualElement(Component,{visualState,parent,props,presenceContext,blockInitialAnimation:presenceContext?presenceContext.initial===false:false,reducedMotionConfig});}const visualElement=visualElementRef.current;/**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */const initialLayoutGroupConfig=useContext(SwitchLayoutGroupContext);if(visualElement&&!visualElement.projection&&ProjectionNodeConstructor&&(visualElement.type===\"html\"||visualElement.type===\"svg\")){createProjectionNode(visualElementRef.current,props,ProjectionNodeConstructor,initialLayoutGroupConfig);}const isMounted=useRef(false);useInsertionEffect(()=>{/**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */if(visualElement&&isMounted.current){visualElement.update(props,presenceContext);}});/**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */const optimisedAppearId=props[optimizedAppearDataAttribute];const wantsHandoff=useRef(Boolean(optimisedAppearId)&&!((_window$MotionHandoff=(_window=window).MotionHandoffIsComplete)!==null&&_window$MotionHandoff!==void 0&&_window$MotionHandoff.call(_window,optimisedAppearId))&&((_window$MotionHasOpti=(_window2=window).MotionHasOptimisedAnimation)===null||_window$MotionHasOpti===void 0?void 0:_window$MotionHasOpti.call(_window2,optimisedAppearId)));useIsomorphicLayoutEffect(()=>{if(!visualElement)return;isMounted.current=true;window.MotionIsMounted=true;visualElement.updateFeatures();microtask.render(visualElement.render);/**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */if(wantsHandoff.current&&visualElement.animationState){visualElement.animationState.animateChanges();}});useEffect(()=>{if(!visualElement)return;if(!wantsHandoff.current&&visualElement.animationState){visualElement.animationState.animateChanges();}if(wantsHandoff.current){// This ensures all future calls to animateChanges() in this component will run in useEffect\nqueueMicrotask(()=>{var _window$MotionHandoff2,_window3;(_window$MotionHandoff2=(_window3=window).MotionHandoffMarkAsComplete)===null||_window$MotionHandoff2===void 0?void 0:_window$MotionHandoff2.call(_window3,optimisedAppearId);});wantsHandoff.current=false;}});return visualElement;}function createProjectionNode(visualElement,props,ProjectionNodeConstructor,initialPromotionConfig){const{layoutId,layout,drag,dragConstraints,layoutScroll,layoutRoot,layoutCrossfade}=props;visualElement.projection=new ProjectionNodeConstructor(visualElement.latestValues,props[\"data-framer-portal-id\"]?undefined:getClosestProjectingNode(visualElement.parent));visualElement.projection.setOptions({layoutId,layout,alwaysMeasureLayout:Boolean(drag)||dragConstraints&&isRefObject(dragConstraints),visualElement,/**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */animationType:typeof layout===\"string\"?layout:\"both\",initialPromotionConfig,crossfade:layoutCrossfade,layoutScroll,layoutRoot});}function getClosestProjectingNode(visualElement){if(!visualElement)return undefined;return visualElement.options.allowProjection!==false?visualElement.projection:getClosestProjectingNode(visualElement.parent);}export{useVisualElement};","map":{"version":3,"names":["microtask","useContext","useRef","useInsertionEffect","useEffect","optimizedAppearDataAttribute","LazyContext","MotionConfigContext","MotionContext","PresenceContext","SwitchLayoutGroupContext","isRefObject","useIsomorphicLayoutEffect","useVisualElement","Component","visualState","props","createVisualElement","ProjectionNodeConstructor","_window$MotionHandoff","_window","_window$MotionHasOpti","_window2","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","reducedMotion","visualElementRef","renderer","current","blockInitialAnimation","initial","initialLayoutGroupConfig","projection","type","createProjectionNode","isMounted","update","optimisedAppearId","wantsHandoff","Boolean","window","MotionHandoffIsComplete","call","MotionHasOptimisedAnimation","MotionIsMounted","updateFeatures","render","animationState","animateChanges","queueMicrotask","_window$MotionHandoff2","_window3","MotionHandoffMarkAsComplete","initialPromotionConfig","layoutId","layout","drag","dragConstraints","layoutScroll","layoutRoot","layoutCrossfade","latestValues","undefined","getClosestProjectingNode","setOptions","alwaysMeasureLayout","animationType","crossfade","options","allowProjection"],"sources":["/home/antisyn/portfolio/src/components/node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs"],"sourcesContent":["import { microtask } from 'motion-dom';\nimport { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !window.MotionHandoffIsComplete?.(optimisedAppearId) &&\n        window.MotionHasOptimisedAnimation?.(optimisedAppearId));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                window.MotionHandoffMarkAsComplete?.(optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, layoutCrossfade, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        crossfade: layoutCrossfade,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}