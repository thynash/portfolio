{"ast":null,"code":"const checkStringStartsWith=token=>key=>typeof key===\"string\"&&key.startsWith(token);const isCSSVariableName=/*@__PURE__*/checkStringStartsWith(\"--\");const startsAsVariableToken=/*@__PURE__*/checkStringStartsWith(\"var(--\");const isCSSVariableToken=value=>{const startsWithToken=startsAsVariableToken(value);if(!startsWithToken)return false;// Ensure any comments are stripped from the value as this can harm performance of the regex.\nreturn singleCssVariableRegex.test(value.split(\"/*\")[0].trim());};const singleCssVariableRegex=/var\\(--(?:[\\x2D0-9A-Z_a-z\\u017F\\u212A]+[\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]*|[\\x2D0-9A-Z_a-z\\u017F\\u212A]+[\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]*,(?:[\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]*(?:(?![\\t-\\r \\(\\)\\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uD800-\\uDFFF\\uFEFF])[^]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF])|[\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]*\\((?:(?:(?![\\(\\)\\uD800-\\uDFFF])[^]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF])|\\((?:(?![\\(\\)\\uD800-\\uDFFF])[^]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF])*\\))*\\))+[\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]*)\\)$/i;export{isCSSVariableName,isCSSVariableToken};","map":{"version":3,"names":["checkStringStartsWith","token","key","startsWith","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","value","startsWithToken","singleCssVariableRegex","test","split","trim"],"sources":["/home/antisyn/portfolio/src/components/node_modules/motion-dom/dist/es/animation/utils/is-css-variable.mjs"],"sourcesContent":["const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n"],"mappings":"AAAA,KAAM,CAAAA,qBAAqB,CAAIC,KAAK,EAAMC,GAAG,EAAK,MAAO,CAAAA,GAAG,GAAK,QAAQ,EAAIA,GAAG,CAACC,UAAU,CAACF,KAAK,CAAC,CAClG,KAAM,CAAAG,iBAAiB,CACvB,aAAcJ,qBAAqB,CAAC,IAAI,CAAC,CACzC,KAAM,CAAAK,qBAAqB,CAC3B,aAAcL,qBAAqB,CAAC,QAAQ,CAAC,CAC7C,KAAM,CAAAM,kBAAkB,CAAIC,KAAK,EAAK,CAClC,KAAM,CAAAC,eAAe,CAAGH,qBAAqB,CAACE,KAAK,CAAC,CACpD,GAAI,CAACC,eAAe,CAChB,MAAO,MAAK,CAChB;AACA,MAAO,CAAAC,sBAAsB,CAACC,IAAI,CAACH,KAAK,CAACI,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CACnE,CAAC,CACD,KAAM,CAAAH,sBAAsB,CAAG,8qBAAqF,CAEpH,OAASL,iBAAiB,CAAEE,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}