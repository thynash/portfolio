{"ast":null,"code":"import{transform}from'motion-dom';import{useConstant}from'../utils/use-constant.mjs';import{useCombineMotionValues}from'./use-combine-values.mjs';import{useComputed}from'./use-computed.mjs';function useTransform(input,inputRangeOrTransformer,outputRange,options){if(typeof input===\"function\"){return useComputed(input);}const transformer=typeof inputRangeOrTransformer===\"function\"?inputRangeOrTransformer:transform(inputRangeOrTransformer,outputRange,options);return Array.isArray(input)?useListTransform(input,transformer):useListTransform([input],_ref=>{let[latest]=_ref;return transformer(latest);});}function useListTransform(values,transformer){const latest=useConstant(()=>[]);return useCombineMotionValues(values,()=>{latest.length=0;const numValues=values.length;for(let i=0;i<numValues;i++){latest[i]=values[i].get();}return transformer(latest);});}export{useTransform};","map":{"version":3,"names":["transform","useConstant","useCombineMotionValues","useComputed","useTransform","input","inputRangeOrTransformer","outputRange","options","transformer","Array","isArray","useListTransform","_ref","latest","values","length","numValues","i","get"],"sources":["/home/antisyn/portfolio/src/components/node_modules/framer-motion/dist/es/value/use-transform.mjs"],"sourcesContent":["import { transform } from 'motion-dom';\nimport { useConstant } from '../utils/use-constant.mjs';\nimport { useCombineMotionValues } from './use-combine-values.mjs';\nimport { useComputed } from './use-computed.mjs';\n\nfunction useTransform(input, inputRangeOrTransformer, outputRange, options) {\n    if (typeof input === \"function\") {\n        return useComputed(input);\n    }\n    const transformer = typeof inputRangeOrTransformer === \"function\"\n        ? inputRangeOrTransformer\n        : transform(inputRangeOrTransformer, outputRange, options);\n    return Array.isArray(input)\n        ? useListTransform(input, transformer)\n        : useListTransform([input], ([latest]) => transformer(latest));\n}\nfunction useListTransform(values, transformer) {\n    const latest = useConstant(() => []);\n    return useCombineMotionValues(values, () => {\n        latest.length = 0;\n        const numValues = values.length;\n        for (let i = 0; i < numValues; i++) {\n            latest[i] = values[i].get();\n        }\n        return transformer(latest);\n    });\n}\n\nexport { useTransform };\n"],"mappings":"AAAA,OAASA,SAAS,KAAQ,YAAY,CACtC,OAASC,WAAW,KAAQ,2BAA2B,CACvD,OAASC,sBAAsB,KAAQ,0BAA0B,CACjE,OAASC,WAAW,KAAQ,oBAAoB,CAEhD,QAAS,CAAAC,YAAYA,CAACC,KAAK,CAAEC,uBAAuB,CAAEC,WAAW,CAAEC,OAAO,CAAE,CACxE,GAAI,MAAO,CAAAH,KAAK,GAAK,UAAU,CAAE,CAC7B,MAAO,CAAAF,WAAW,CAACE,KAAK,CAAC,CAC7B,CACA,KAAM,CAAAI,WAAW,CAAG,MAAO,CAAAH,uBAAuB,GAAK,UAAU,CAC3DA,uBAAuB,CACvBN,SAAS,CAACM,uBAAuB,CAAEC,WAAW,CAAEC,OAAO,CAAC,CAC9D,MAAO,CAAAE,KAAK,CAACC,OAAO,CAACN,KAAK,CAAC,CACrBO,gBAAgB,CAACP,KAAK,CAAEI,WAAW,CAAC,CACpCG,gBAAgB,CAAC,CAACP,KAAK,CAAC,CAAEQ,IAAA,MAAC,CAACC,MAAM,CAAC,CAAAD,IAAA,OAAK,CAAAJ,WAAW,CAACK,MAAM,CAAC,GAAC,CACtE,CACA,QAAS,CAAAF,gBAAgBA,CAACG,MAAM,CAAEN,WAAW,CAAE,CAC3C,KAAM,CAAAK,MAAM,CAAGb,WAAW,CAAC,IAAM,EAAE,CAAC,CACpC,MAAO,CAAAC,sBAAsB,CAACa,MAAM,CAAE,IAAM,CACxCD,MAAM,CAACE,MAAM,CAAG,CAAC,CACjB,KAAM,CAAAC,SAAS,CAAGF,MAAM,CAACC,MAAM,CAC/B,IAAK,GAAI,CAAAE,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGD,SAAS,CAAEC,CAAC,EAAE,CAAE,CAChCJ,MAAM,CAACI,CAAC,CAAC,CAAGH,MAAM,CAACG,CAAC,CAAC,CAACC,GAAG,CAAC,CAAC,CAC/B,CACA,MAAO,CAAAV,WAAW,CAACK,MAAM,CAAC,CAC9B,CAAC,CAAC,CACN,CAEA,OAASV,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}