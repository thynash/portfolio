{"ast":null,"code":"import{frame}from'motion-dom';import{useMotionValueEvent}from'../utils/use-motion-value-event.mjs';import{useMotionValue}from'./use-motion-value.mjs';/**\n * Creates a `MotionValue` that updates when the velocity of the provided `MotionValue` changes.\n *\n * ```javascript\n * const x = useMotionValue(0)\n * const xVelocity = useVelocity(x)\n * const xAcceleration = useVelocity(xVelocity)\n * ```\n *\n * @public\n */function useVelocity(value){const velocity=useMotionValue(value.getVelocity());const updateVelocity=()=>{const latest=value.getVelocity();velocity.set(latest);/**\n         * If we still have velocity, schedule an update for the next frame\n         * to keep checking until it is zero.\n         */if(latest)frame.update(updateVelocity);};useMotionValueEvent(value,\"change\",()=>{// Schedule an update to this value at the end of the current frame.\nframe.update(updateVelocity,false,true);});return velocity;}export{useVelocity};","map":{"version":3,"names":["frame","useMotionValueEvent","useMotionValue","useVelocity","value","velocity","getVelocity","updateVelocity","latest","set","update"],"sources":["/home/antisyn/portfolio/src/components/node_modules/framer-motion/dist/es/value/use-velocity.mjs"],"sourcesContent":["import { frame } from 'motion-dom';\nimport { useMotionValueEvent } from '../utils/use-motion-value-event.mjs';\nimport { useMotionValue } from './use-motion-value.mjs';\n\n/**\n * Creates a `MotionValue` that updates when the velocity of the provided `MotionValue` changes.\n *\n * ```javascript\n * const x = useMotionValue(0)\n * const xVelocity = useVelocity(x)\n * const xAcceleration = useVelocity(xVelocity)\n * ```\n *\n * @public\n */\nfunction useVelocity(value) {\n    const velocity = useMotionValue(value.getVelocity());\n    const updateVelocity = () => {\n        const latest = value.getVelocity();\n        velocity.set(latest);\n        /**\n         * If we still have velocity, schedule an update for the next frame\n         * to keep checking until it is zero.\n         */\n        if (latest)\n            frame.update(updateVelocity);\n    };\n    useMotionValueEvent(value, \"change\", () => {\n        // Schedule an update to this value at the end of the current frame.\n        frame.update(updateVelocity, false, true);\n    });\n    return velocity;\n}\n\nexport { useVelocity };\n"],"mappings":"AAAA,OAASA,KAAK,KAAQ,YAAY,CAClC,OAASC,mBAAmB,KAAQ,qCAAqC,CACzE,OAASC,cAAc,KAAQ,wBAAwB,CAEvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,QAAS,CAAAC,WAAWA,CAACC,KAAK,CAAE,CACxB,KAAM,CAAAC,QAAQ,CAAGH,cAAc,CAACE,KAAK,CAACE,WAAW,CAAC,CAAC,CAAC,CACpD,KAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CACzB,KAAM,CAAAC,MAAM,CAAGJ,KAAK,CAACE,WAAW,CAAC,CAAC,CAClCD,QAAQ,CAACI,GAAG,CAACD,MAAM,CAAC,CACpB;AACR;AACA;AACA,WACQ,GAAIA,MAAM,CACNR,KAAK,CAACU,MAAM,CAACH,cAAc,CAAC,CACpC,CAAC,CACDN,mBAAmB,CAACG,KAAK,CAAE,QAAQ,CAAE,IAAM,CACvC;AACAJ,KAAK,CAACU,MAAM,CAACH,cAAc,CAAE,KAAK,CAAE,IAAI,CAAC,CAC7C,CAAC,CAAC,CACF,MAAO,CAAAF,QAAQ,CACnB,CAEA,OAASF,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}