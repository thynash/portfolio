{"ast":null,"code":"import{useConstant}from'../../utils/use-constant.mjs';import{useUnmountEffect}from'../../utils/use-unmount-effect.mjs';import{createScopedAnimate}from'../animate/index.mjs';function useAnimate(){const scope=useConstant(()=>({current:null,// Will be hydrated by React\nanimations:[]}));const animate=useConstant(()=>createScopedAnimate(scope));useUnmountEffect(()=>{scope.animations.forEach(animation=>animation.stop());});return[scope,animate];}export{useAnimate};","map":{"version":3,"names":["useConstant","useUnmountEffect","createScopedAnimate","useAnimate","scope","current","animations","animate","forEach","animation","stop"],"sources":["/home/antisyn/portfolio/src/components/node_modules/framer-motion/dist/es/animation/hooks/use-animate.mjs"],"sourcesContent":["import { useConstant } from '../../utils/use-constant.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { createScopedAnimate } from '../animate/index.mjs';\n\nfunction useAnimate() {\n    const scope = useConstant(() => ({\n        current: null, // Will be hydrated by React\n        animations: [],\n    }));\n    const animate = useConstant(() => createScopedAnimate(scope));\n    useUnmountEffect(() => {\n        scope.animations.forEach((animation) => animation.stop());\n    });\n    return [scope, animate];\n}\n\nexport { useAnimate };\n"],"mappings":"AAAA,OAASA,WAAW,KAAQ,8BAA8B,CAC1D,OAASC,gBAAgB,KAAQ,oCAAoC,CACrE,OAASC,mBAAmB,KAAQ,sBAAsB,CAE1D,QAAS,CAAAC,UAAUA,CAAA,CAAG,CAClB,KAAM,CAAAC,KAAK,CAAGJ,WAAW,CAAC,KAAO,CAC7BK,OAAO,CAAE,IAAI,CAAE;AACfC,UAAU,CAAE,EAChB,CAAC,CAAC,CAAC,CACH,KAAM,CAAAC,OAAO,CAAGP,WAAW,CAAC,IAAME,mBAAmB,CAACE,KAAK,CAAC,CAAC,CAC7DH,gBAAgB,CAAC,IAAM,CACnBG,KAAK,CAACE,UAAU,CAACE,OAAO,CAAEC,SAAS,EAAKA,SAAS,CAACC,IAAI,CAAC,CAAC,CAAC,CAC7D,CAAC,CAAC,CACF,MAAO,CAACN,KAAK,CAAEG,OAAO,CAAC,CAC3B,CAEA,OAASJ,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}