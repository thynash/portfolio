{"ast":null,"code":"import{cancelFrame,frame}from'motion-dom';import{useIsomorphicLayoutEffect}from'../utils/use-isomorphic-effect.mjs';import{useMotionValue}from'./use-motion-value.mjs';function useCombineMotionValues(values,combineValues){/**\n     * Initialise the returned motion value. This remains the same between renders.\n     */const value=useMotionValue(combineValues());/**\n     * Create a function that will update the template motion value with the latest values.\n     * This is pre-bound so whenever a motion value updates it can schedule its\n     * execution in Framesync. If it's already been scheduled it won't be fired twice\n     * in a single frame.\n     */const updateValue=()=>value.set(combineValues());/**\n     * Synchronously update the motion value with the latest values during the render.\n     * This ensures that within a React render, the styles applied to the DOM are up-to-date.\n     */updateValue();/**\n     * Subscribe to all motion values found within the template. Whenever any of them change,\n     * schedule an update.\n     */useIsomorphicLayoutEffect(()=>{const scheduleUpdate=()=>frame.preRender(updateValue,false,true);const subscriptions=values.map(v=>v.on(\"change\",scheduleUpdate));return()=>{subscriptions.forEach(unsubscribe=>unsubscribe());cancelFrame(updateValue);};});return value;}export{useCombineMotionValues};","map":{"version":3,"names":["cancelFrame","frame","useIsomorphicLayoutEffect","useMotionValue","useCombineMotionValues","values","combineValues","value","updateValue","set","scheduleUpdate","preRender","subscriptions","map","v","on","forEach","unsubscribe"],"sources":["/home/antisyn/portfolio/src/components/node_modules/framer-motion/dist/es/value/use-combine-values.mjs"],"sourcesContent":["import { cancelFrame, frame } from 'motion-dom';\nimport { useIsomorphicLayoutEffect } from '../utils/use-isomorphic-effect.mjs';\nimport { useMotionValue } from './use-motion-value.mjs';\n\nfunction useCombineMotionValues(values, combineValues) {\n    /**\n     * Initialise the returned motion value. This remains the same between renders.\n     */\n    const value = useMotionValue(combineValues());\n    /**\n     * Create a function that will update the template motion value with the latest values.\n     * This is pre-bound so whenever a motion value updates it can schedule its\n     * execution in Framesync. If it's already been scheduled it won't be fired twice\n     * in a single frame.\n     */\n    const updateValue = () => value.set(combineValues());\n    /**\n     * Synchronously update the motion value with the latest values during the render.\n     * This ensures that within a React render, the styles applied to the DOM are up-to-date.\n     */\n    updateValue();\n    /**\n     * Subscribe to all motion values found within the template. Whenever any of them change,\n     * schedule an update.\n     */\n    useIsomorphicLayoutEffect(() => {\n        const scheduleUpdate = () => frame.preRender(updateValue, false, true);\n        const subscriptions = values.map((v) => v.on(\"change\", scheduleUpdate));\n        return () => {\n            subscriptions.forEach((unsubscribe) => unsubscribe());\n            cancelFrame(updateValue);\n        };\n    });\n    return value;\n}\n\nexport { useCombineMotionValues };\n"],"mappings":"AAAA,OAASA,WAAW,CAAEC,KAAK,KAAQ,YAAY,CAC/C,OAASC,yBAAyB,KAAQ,oCAAoC,CAC9E,OAASC,cAAc,KAAQ,wBAAwB,CAEvD,QAAS,CAAAC,sBAAsBA,CAACC,MAAM,CAAEC,aAAa,CAAE,CACnD;AACJ;AACA,OACI,KAAM,CAAAC,KAAK,CAAGJ,cAAc,CAACG,aAAa,CAAC,CAAC,CAAC,CAC7C;AACJ;AACA;AACA;AACA;AACA,OACI,KAAM,CAAAE,WAAW,CAAGA,CAAA,GAAMD,KAAK,CAACE,GAAG,CAACH,aAAa,CAAC,CAAC,CAAC,CACpD;AACJ;AACA;AACA,OACIE,WAAW,CAAC,CAAC,CACb;AACJ;AACA;AACA,OACIN,yBAAyB,CAAC,IAAM,CAC5B,KAAM,CAAAQ,cAAc,CAAGA,CAAA,GAAMT,KAAK,CAACU,SAAS,CAACH,WAAW,CAAE,KAAK,CAAE,IAAI,CAAC,CACtE,KAAM,CAAAI,aAAa,CAAGP,MAAM,CAACQ,GAAG,CAAEC,CAAC,EAAKA,CAAC,CAACC,EAAE,CAAC,QAAQ,CAAEL,cAAc,CAAC,CAAC,CACvE,MAAO,IAAM,CACTE,aAAa,CAACI,OAAO,CAAEC,WAAW,EAAKA,WAAW,CAAC,CAAC,CAAC,CACrDjB,WAAW,CAACQ,WAAW,CAAC,CAC5B,CAAC,CACL,CAAC,CAAC,CACF,MAAO,CAAAD,KAAK,CAChB,CAEA,OAASH,sBAAsB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}