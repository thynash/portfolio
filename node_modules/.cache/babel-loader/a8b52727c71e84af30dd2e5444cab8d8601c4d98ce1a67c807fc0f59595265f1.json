{"ast":null,"code":"import _objectSpread from\"/home/antisyn/portfolio/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{warning}from'motion-utils';import{hex}from'../../value/types/color/hex.mjs';import{hsla}from'../../value/types/color/hsla.mjs';import{hslaToRgba}from'../../value/types/color/hsla-to-rgba.mjs';import{rgba}from'../../value/types/color/rgba.mjs';import{mixImmediate}from'./immediate.mjs';import{mixNumber}from'./number.mjs';// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor=(from,to,v)=>{const fromExpo=from*from;const expo=v*(to*to-fromExpo)+fromExpo;return expo<0?0:Math.sqrt(expo);};const colorTypes=[hex,rgba,hsla];const getColorType=v=>colorTypes.find(type=>type.test(v));function asRGBA(color){const type=getColorType(color);warning(Boolean(type),\"'\".concat(color,\"' is not an animatable color. Use the equivalent color code instead.\"));if(!Boolean(type))return false;let model=type.parse(color);if(type===hsla){// TODO Remove this cast - needed since Motion's stricter typing\nmodel=hslaToRgba(model);}return model;}const mixColor=(from,to)=>{const fromRGBA=asRGBA(from);const toRGBA=asRGBA(to);if(!fromRGBA||!toRGBA){return mixImmediate(from,to);}const blended=_objectSpread({},fromRGBA);return v=>{blended.red=mixLinearColor(fromRGBA.red,toRGBA.red,v);blended.green=mixLinearColor(fromRGBA.green,toRGBA.green,v);blended.blue=mixLinearColor(fromRGBA.blue,toRGBA.blue,v);blended.alpha=mixNumber(fromRGBA.alpha,toRGBA.alpha,v);return rgba.transform(blended);};};export{mixColor,mixLinearColor};","map":{"version":3,"names":["warning","hex","hsla","hslaToRgba","rgba","mixImmediate","mixNumber","mixLinearColor","from","to","v","fromExpo","expo","Math","sqrt","colorTypes","getColorType","find","type","test","asRGBA","color","Boolean","concat","model","parse","mixColor","fromRGBA","toRGBA","blended","_objectSpread","red","green","blue","alpha","transform"],"sources":["/home/antisyn/portfolio/src/components/node_modules/motion-dom/dist/es/utils/mix/color.mjs"],"sourcesContent":["import { warning } from 'motion-utils';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { hslaToRgba } from '../../value/types/color/hsla-to-rgba.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber } from './number.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n"],"mappings":"4GAAA,OAASA,OAAO,KAAQ,cAAc,CACtC,OAASC,GAAG,KAAQ,iCAAiC,CACrD,OAASC,IAAI,KAAQ,kCAAkC,CACvD,OAASC,UAAU,KAAQ,0CAA0C,CACrE,OAASC,IAAI,KAAQ,kCAAkC,CACvD,OAASC,YAAY,KAAQ,iBAAiB,CAC9C,OAASC,SAAS,KAAQ,cAAc,CAExC;AACA;AACA;AACA,KAAM,CAAAC,cAAc,CAAGA,CAACC,IAAI,CAAEC,EAAE,CAAEC,CAAC,GAAK,CACpC,KAAM,CAAAC,QAAQ,CAAGH,IAAI,CAAGA,IAAI,CAC5B,KAAM,CAAAI,IAAI,CAAGF,CAAC,EAAID,EAAE,CAAGA,EAAE,CAAGE,QAAQ,CAAC,CAAGA,QAAQ,CAChD,MAAO,CAAAC,IAAI,CAAG,CAAC,CAAG,CAAC,CAAGC,IAAI,CAACC,IAAI,CAACF,IAAI,CAAC,CACzC,CAAC,CACD,KAAM,CAAAG,UAAU,CAAG,CAACd,GAAG,CAAEG,IAAI,CAAEF,IAAI,CAAC,CACpC,KAAM,CAAAc,YAAY,CAAIN,CAAC,EAAKK,UAAU,CAACE,IAAI,CAAEC,IAAI,EAAKA,IAAI,CAACC,IAAI,CAACT,CAAC,CAAC,CAAC,CACnE,QAAS,CAAAU,MAAMA,CAACC,KAAK,CAAE,CACnB,KAAM,CAAAH,IAAI,CAAGF,YAAY,CAACK,KAAK,CAAC,CAChCrB,OAAO,CAACsB,OAAO,CAACJ,IAAI,CAAC,KAAAK,MAAA,CAAMF,KAAK,wEAAsE,CAAC,CACvG,GAAI,CAACC,OAAO,CAACJ,IAAI,CAAC,CACd,MAAO,MAAK,CAChB,GAAI,CAAAM,KAAK,CAAGN,IAAI,CAACO,KAAK,CAACJ,KAAK,CAAC,CAC7B,GAAIH,IAAI,GAAKhB,IAAI,CAAE,CACf;AACAsB,KAAK,CAAGrB,UAAU,CAACqB,KAAK,CAAC,CAC7B,CACA,MAAO,CAAAA,KAAK,CAChB,CACA,KAAM,CAAAE,QAAQ,CAAGA,CAAClB,IAAI,CAAEC,EAAE,GAAK,CAC3B,KAAM,CAAAkB,QAAQ,CAAGP,MAAM,CAACZ,IAAI,CAAC,CAC7B,KAAM,CAAAoB,MAAM,CAAGR,MAAM,CAACX,EAAE,CAAC,CACzB,GAAI,CAACkB,QAAQ,EAAI,CAACC,MAAM,CAAE,CACtB,MAAO,CAAAvB,YAAY,CAACG,IAAI,CAAEC,EAAE,CAAC,CACjC,CACA,KAAM,CAAAoB,OAAO,CAAAC,aAAA,IAAQH,QAAQ,CAAE,CAC/B,MAAQ,CAAAjB,CAAC,EAAK,CACVmB,OAAO,CAACE,GAAG,CAAGxB,cAAc,CAACoB,QAAQ,CAACI,GAAG,CAAEH,MAAM,CAACG,GAAG,CAAErB,CAAC,CAAC,CACzDmB,OAAO,CAACG,KAAK,CAAGzB,cAAc,CAACoB,QAAQ,CAACK,KAAK,CAAEJ,MAAM,CAACI,KAAK,CAAEtB,CAAC,CAAC,CAC/DmB,OAAO,CAACI,IAAI,CAAG1B,cAAc,CAACoB,QAAQ,CAACM,IAAI,CAAEL,MAAM,CAACK,IAAI,CAAEvB,CAAC,CAAC,CAC5DmB,OAAO,CAACK,KAAK,CAAG5B,SAAS,CAACqB,QAAQ,CAACO,KAAK,CAAEN,MAAM,CAACM,KAAK,CAAExB,CAAC,CAAC,CAC1D,MAAO,CAAAN,IAAI,CAAC+B,SAAS,CAACN,OAAO,CAAC,CAClC,CAAC,CACL,CAAC,CAED,OAASH,QAAQ,CAAEnB,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}