{"ast":null,"code":"import{useContext,useMemo}from'react';import{MotionContext}from'./index.mjs';import{getCurrentTreeVariants}from'./utils.mjs';function useCreateMotionContext(props){const{initial,animate}=getCurrentTreeVariants(props,useContext(MotionContext));return useMemo(()=>({initial,animate}),[variantLabelsAsDependency(initial),variantLabelsAsDependency(animate)]);}function variantLabelsAsDependency(prop){return Array.isArray(prop)?prop.join(\" \"):prop;}export{useCreateMotionContext};","map":{"version":3,"names":["useContext","useMemo","MotionContext","getCurrentTreeVariants","useCreateMotionContext","props","initial","animate","variantLabelsAsDependency","prop","Array","isArray","join"],"sources":["/home/antisyn/portfolio/src/components/node_modules/framer-motion/dist/es/context/MotionContext/create.mjs"],"sourcesContent":["import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n"],"mappings":"AAAA,OAASA,UAAU,CAAEC,OAAO,KAAQ,OAAO,CAC3C,OAASC,aAAa,KAAQ,aAAa,CAC3C,OAASC,sBAAsB,KAAQ,aAAa,CAEpD,QAAS,CAAAC,sBAAsBA,CAACC,KAAK,CAAE,CACnC,KAAM,CAAEC,OAAO,CAAEC,OAAQ,CAAC,CAAGJ,sBAAsB,CAACE,KAAK,CAAEL,UAAU,CAACE,aAAa,CAAC,CAAC,CACrF,MAAO,CAAAD,OAAO,CAAC,KAAO,CAAEK,OAAO,CAAEC,OAAQ,CAAC,CAAC,CAAE,CAACC,yBAAyB,CAACF,OAAO,CAAC,CAAEE,yBAAyB,CAACD,OAAO,CAAC,CAAC,CAAC,CAC1H,CACA,QAAS,CAAAC,yBAAyBA,CAACC,IAAI,CAAE,CACrC,MAAO,CAAAC,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,CAAGA,IAAI,CAACG,IAAI,CAAC,GAAG,CAAC,CAAGH,IAAI,CACtD,CAEA,OAASL,sBAAsB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}