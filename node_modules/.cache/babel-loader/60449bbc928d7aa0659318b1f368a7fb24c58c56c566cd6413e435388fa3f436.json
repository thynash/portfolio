{"ast":null,"code":"\"use client\";import _objectSpread from\"/home/antisyn/portfolio/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{jsxs,jsx}from'react/jsx-runtime';import{warning,invariant}from'motion-utils';import{forwardRef,useContext}from'react';import{LayoutGroupContext}from'../context/LayoutGroupContext.mjs';import{LazyContext}from'../context/LazyContext.mjs';import{MotionConfigContext}from'../context/MotionConfigContext.mjs';import{MotionContext}from'../context/MotionContext/index.mjs';import{useCreateMotionContext}from'../context/MotionContext/create.mjs';import{isBrowser}from'../utils/is-browser.mjs';import{featureDefinitions}from'./features/definitions.mjs';import{loadFeatures}from'./features/load-features.mjs';import{motionComponentSymbol}from'./utils/symbol.mjs';import{useMotionRef}from'./utils/use-motion-ref.mjs';import{useVisualElement}from'./utils/use-visual-element.mjs';/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */function createRendererMotionComponent(_ref){var _ref2,_Component$displayNam;let{preloadedFeatures,createVisualElement,useRender,useVisualState,Component}=_ref;preloadedFeatures&&loadFeatures(preloadedFeatures);function MotionComponent(props,externalRef){/**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */let MeasureLayout;const configAndProps=_objectSpread(_objectSpread(_objectSpread({},useContext(MotionConfigContext)),props),{},{layoutId:useLayoutId(props)});const{isStatic}=configAndProps;const context=useCreateMotionContext(props);const visualState=useVisualState(props,isStatic);if(!isStatic&&isBrowser){useStrictMode(configAndProps,preloadedFeatures);const layoutProjection=getProjectionFunctionality(configAndProps);MeasureLayout=layoutProjection.MeasureLayout;/**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */context.visualElement=useVisualElement(Component,visualState,configAndProps,createVisualElement,layoutProjection.ProjectionNode);}/**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */return jsxs(MotionContext.Provider,{value:context,children:[MeasureLayout&&context.visualElement?jsx(MeasureLayout,_objectSpread({visualElement:context.visualElement},configAndProps)):null,useRender(Component,props,useMotionRef(visualState,context.visualElement,externalRef),visualState,isStatic,context.visualElement)]});}MotionComponent.displayName=\"motion.\".concat(typeof Component===\"string\"?Component:\"create(\".concat((_ref2=(_Component$displayNam=Component.displayName)!==null&&_Component$displayNam!==void 0?_Component$displayNam:Component.name)!==null&&_ref2!==void 0?_ref2:\"\",\")\"));const ForwardRefMotionComponent=/*#__PURE__*/forwardRef(MotionComponent);ForwardRefMotionComponent[motionComponentSymbol]=Component;return ForwardRefMotionComponent;}function useLayoutId(_ref3){let{layoutId}=_ref3;const layoutGroupId=useContext(LayoutGroupContext).id;return layoutGroupId&&layoutId!==undefined?layoutGroupId+\"-\"+layoutId:layoutId;}function useStrictMode(configAndProps,preloadedFeatures){const isStrict=useContext(LazyContext).strict;/**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */if(process.env.NODE_ENV!==\"production\"&&preloadedFeatures&&isStrict){const strictMessage=\"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";configAndProps.ignoreStrict?warning(false,strictMessage):invariant(false,strictMessage);}}function getProjectionFunctionality(props){const{drag,layout}=featureDefinitions;if(!drag&&!layout)return{};const combined=_objectSpread(_objectSpread({},drag),layout);return{MeasureLayout:drag!==null&&drag!==void 0&&drag.isEnabled(props)||layout!==null&&layout!==void 0&&layout.isEnabled(props)?combined.MeasureLayout:undefined,ProjectionNode:combined.ProjectionNode};}export{createRendererMotionComponent};","map":{"version":3,"names":["_objectSpread","jsxs","jsx","warning","invariant","forwardRef","useContext","LayoutGroupContext","LazyContext","MotionConfigContext","MotionContext","useCreateMotionContext","isBrowser","featureDefinitions","loadFeatures","motionComponentSymbol","useMotionRef","useVisualElement","createRendererMotionComponent","_ref","_ref2","_Component$displayNam","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","MotionComponent","props","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","isStatic","context","visualState","useStrictMode","layoutProjection","getProjectionFunctionality","visualElement","ProjectionNode","Provider","value","children","displayName","concat","name","ForwardRefMotionComponent","_ref3","layoutGroupId","id","undefined","isStrict","strict","process","env","NODE_ENV","strictMessage","ignoreStrict","drag","layout","combined","isEnabled"],"sources":["/home/antisyn/portfolio/src/components/node_modules/framer-motion/dist/es/motion/index.mjs"],"sourcesContent":["\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${Component.displayName ?? Component.name ?? \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: drag?.isEnabled(props) || layout?.isEnabled(props)\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}